// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package market

import (
	"math/big"
	"strings"

	"github.com/FISCO-BCOS/go-sdk/abi"
	"github.com/FISCO-BCOS/go-sdk/abi/bind"
	"github.com/FISCO-BCOS/go-sdk/core/types"
	"github.com/FISCO-BCOS/go-sdk/event"
	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/common"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = abi.U256
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// MarketABI is the input ABI used to generate the binding from.
const MarketABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_deploymentOrderID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"_success\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_unitPrice\",\"type\":\"uint256\"}],\"name\":\"AuctionEndEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_deploymentOrderID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_auctionAddress\",\"type\":\"address\"}],\"name\":\"NewDeploymentOrderEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_deploymentOrderID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_customer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"NewLeaseEvent\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"contractSimpleAuction\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deploymentOrderID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_unitPrice\",\"type\":\"uint256\"}],\"name\":\"bid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"deploymentOrders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"customer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"faaSLevelID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"faaSDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"highestUnitPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deploymentOrderID\",\"type\":\"uint256\"}],\"name\":\"getDeploymentOrder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_highestUnitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_faaSDuration\",\"type\":\"uint256\"}],\"name\":\"getDeploymentOrderLockFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"getProviderDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"getProviderReputation\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"isProviderQualified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"}],\"name\":\"isProviderRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"leases\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"customer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"faaSLevelID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"faaSDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"unitPrice\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isViolatedSLA\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"providerServiceFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customerLockFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customerWithdrawFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"customerCompensationFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"witnessFee\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maintainerFee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deploymentOrderID\",\"type\":\"uint256\"}],\"name\":\"matchDeploymentOrder\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_faaSLevelID\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_highestUnitPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_faaSDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_biddingDuration\",\"type\":\"uint256\"}],\"name\":\"newDeploymentOrder\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numDeploymentOrders\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"providerLogin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"providerLogout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"providerReputationInit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"providerReputationQualified\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_delpoymentOrderID\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"_isViolatedSLA\",\"type\":\"bool\"}],\"name\":\"reportDeploymemtOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_deploymentOrderID\",\"type\":\"uint256\"}],\"name\":\"settleDeploymemtOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stdProviderDeposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"contractFaaSToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]"

// MarketBin is the compiled bytecode used for deploying new contracts.
var MarketBin = "0x608060405234801561001057600080fd5b5060405161346a38038061346a8339818101604052602081101561003357600080fd5b810190808051906020019092919050505080806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506064600181905550600560038190555060056004819055506001600781905550506133b4806100b66000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c806361bb20f0116100b8578063b82964711161007c578063b829647114610610578063c165f7221461066c578063ce67ca031461068a578063d53445291461070d578063dbd4314f14610759578063f0611e38146107ec57610137565b806361bb20f014610431578063729d98e914610489578063747a1ba2146104e1578063884eacb81461051b5780638927a1061461052557610137565b80632bf35570116100ff5780632bf35570146102b457806355a373d6146102be578063571a26a014610308578063598647f8146103765780635aeedd4d146103ae57610137565b80630bca42ae1461013c578063106647241461015a57806318f645fa146101885780631ead914e1461023a5780632152189214610296575b600080fd5b61014461080a565b6040518082815260200191505060405180910390f35b6101866004803603602081101561017057600080fd5b8101908080359060200190929190505050610810565b005b6101b46004803603602081101561019e57600080fd5b8101908080359060200190929190505050611079565b604051808315151515815260200180602001828103825283818151815260200191508051906020019080838360005b838110156101fe5780820151818401526020810190506101e3565b50505050905090810190601f16801561022b5780820380516001836020036101000a031916815260200191505b50935050505060405180910390f35b61027c6004803603602081101561025057600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506114f0565b604051808215151515815260200191505060405180910390f35b61029e61153b565b6040518082815260200191505060405180910390f35b6102bc611541565b005b6102c6611725565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103346004803603602081101561031e57600080fd5b810190808035906020019092919050505061174a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6103ac6004803603604081101561038c57600080fd5b81019080803590602001909291908035906020019092919050505061177d565b005b6103da600480360360208110156103c457600080fd5b81019080803590602001909291905050506119a9565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390f35b6104736004803603602081101561044757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506119f9565b6040518082815260200191505060405180910390f35b6104cb6004803603602081101561049f57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611aa7565b6040518082815260200191505060405180910390f35b610519600480360360408110156104f757600080fd5b8101908080359060200190929190803515159060200190929190505050611b55565b005b610523611cf5565b005b6105516004803603602081101561053b57600080fd5b8101908080359060200190929190505050611f0f565b604051808d73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018c73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018b81526020018a8152602001898152602001881515151581526020018781526020018681526020018581526020018481526020018381526020018281526020019c5050505050505050505050505060405180910390f35b6106526004803603602081101561062657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611fbc565b604051808215151515815260200191505060405180910390f35b61067461200a565b6040518082815260200191505060405180910390f35b6106b6600480360360208110156106a057600080fd5b8101908080359060200190929190505050612010565b604051808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200184815260200183815260200182815260200194505050505060405180910390f35b6107436004803603604081101561072357600080fd5b8101908080359060200190929190803590602001909291905050506120d6565b6040518082815260200191505060405180910390f35b6107a36004803603608081101561076f57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291905050506120e3565b604051808381526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390f35b6107f46124a7565b6040518082815260200191505060405180910390f35b60015481565b80600280600381111561081f57fe5b600b600084815260200190815260200160002060009054906101000a900460ff16600381111561084b57fe5b146108a1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806132a46035913960400191505060405180910390fd5b6108a9612883565b600a6000858152602001908152602001600020604051806101800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820154815260200160038201548152602001600482015481526020016005820160009054906101000a900460ff1615151515815260200160068201548152602001600782015481526020016008820154815260200160098201548152602001600a8201548152602001600b82015481525050905060008090506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb828461016001516040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610a9d57600080fd5b505af1158015610ab1573d6000803e3d6000fd5b505050506040513d6020811015610ac757600080fd5b8101908080519060200190929190505050610b25576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168461014001516040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610bf457600080fd5b505af1158015610c08573d6000803e3d6000fd5b505050506040513d6020811015610c1e57600080fd5b8101908080519060200190929190505050610c7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83600001518461010001516040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610d2d57600080fd5b505af1158015610d41573d6000803e3d6000fd5b505050506040513d6020811015610d5757600080fd5b8101908080519060200190929190505050610db5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b600115158260a0015115151415610f04576000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83600001518461010001516040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610e7757600080fd5b505af1158015610e8b573d6000803e3d6000fd5b505050506040513d6020811015610ea157600080fd5b8101908080519060200190929190505050610eff576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b61103d565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb83602001518460c001516040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015610fb457600080fd5b505af1158015610fc8573d6000803e3d6000fd5b505050506040513d6020811015610fde57600080fd5b810190808051906020019092919050505061103c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526000815260200160200191505060405180910390fd5b5b6003600b600087815260200190815260200160002060006101000a81548160ff0219169083600381111561106d57fe5b02179055505050505050565b6000606082600080600381111561108c57fe5b600b600084815260200190815260200160002060009054906101000a900460ff1660038111156110b857fe5b1461110e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806132a46035913960400191505060405180910390fd5b60008060006009600089815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16632a24f46c6040518163ffffffff1660e01b8152600401606060405180830381600087803b15801561118e57600080fd5b505af11580156111a2573d6000803e3d6000fd5b505050506040513d60608110156111b857600080fd5b81019080805190602001909291908051906020019092919080519060200190929190505050809350819450829550505050877f7621c01b83465196c05b7b0420b555f9b952da7a5168247b5dd4c006ea9be68484848460405180841515151581526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390a26000151583151514156112c1576003600b60008a815260200190815260200160002060006101000a81548160ff0219169083600381111561129e57fe5b0217905550600060405180602001604052806000815250965096505050506114e9565b6112c9612883565b6112d48984846124ad565b905080600a60008b815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020155606082015181600301556080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c0820151816006015560e082015181600701556101008201518160080155610120820151816009015561014082015181600a015561016082015181600b0155905050887fb7b56d611111b49690d934a0d72e2b472f4d78a8863f7da8c84e8381e894b2f882600001518360200151604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a26001600b60008b815260200190815260200160002060006101000a81548160ff021916908360038111156114c957fe5b021790555060016040518060200160405280600081525097509750505050505b5050915091565b600080600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054119050919050565b60045481565b6000151561154e336114f0565b1515146115a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061327d6027913960400191505060405180910390fd5b6115ae612641565b600115156000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306001546040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561169057600080fd5b505af11580156116a4573d6000803e3d6000fd5b505050506040513d60208110156116ba57600080fd5b8101908080519060200190929190505050151514611723576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806132296028913960400191505060405180910390fd5b565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60096020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6001151561178a336114f0565b1515146117e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806132fe602b913960400191505060405180910390fd5b6117eb33611fbc565b611840576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806132d96025913960400191505060405180910390fd5b81600080600381111561184f57fe5b600b600084815260200190815260200160002060009054906101000a900460ff16600381111561187b57fe5b146118d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806132a46035913960400191505060405180910390fd5b6009600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166359d667a533856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050600060405180830381600087803b15801561198b57600080fd5b505af115801561199f573d6000803e3d6000fd5b5050505050505050565b60086020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154905084565b600060011515611a08336114f0565b151514611a60576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806132fe602b913960400191505060405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b600060011515611ab6336114f0565b151514611b0e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806132fe602b913960400191505060405180910390fd5b600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b816001806003811115611b6457fe5b600b600084815260200190815260200160002060009054906101000a900460ff166003811115611b9057fe5b14611be6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806132a46035913960400191505060405180910390fd5b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611c8c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180613251602c913960400191505060405180910390fd5b82600a600086815260200190815260200160002060050160006101000a81548160ff0219169083151502179055506002600b600086815260200190815260200160002060006101000a81548160ff02191690836003811115611cea57fe5b021790555050505050565b60011515611d02336114f0565b151514611d5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806132fe602b913960400191505060405180910390fd5b611d6333611fbc565b611db8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806132d96025913960400191505060405180910390fd5b6000611dc3336119f9565b9050611dcd612734565b600115156000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015611e7957600080fd5b505af1158015611e8d573d6000803e3d6000fd5b505050506040513d6020811015611ea357600080fd5b8101908080519060200190929190505050151514611f0c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180613352602d913960400191505060405180910390fd5b50565b600a6020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060020154908060030154908060040154908060050160009054906101000a900460ff169080600601549080600701549080600801549080600901549080600a01549080600b015490508c565b6000600454600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205410159050919050565b60075481565b60008060008061201e612912565b600860008781526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201548152602001600382015481525050905080600001518160200151826040015183606001519450945094509450509193509193565b6000818302905092915050565b60008060006120f286866120d6565b9050600115156000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156121d457600080fd5b505af11580156121e8573d6000803e3d6000fd5b505050506040513d60208110156121fe57600080fd5b8101908080519060200190929190505050151514612267576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806133296029913960400191505060405180910390fd5b60006007600081548092919060010191905055905060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001878152602001878152602001888152506008600083815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201556060820151816003015590505060003082898860405161234090612950565b808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001848152602001838152602001828152602001945050505050604051809103906000f0801580156123a7573d6000803e3d6000fd5b509050806009600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600b600084815260200190815260200160002060006101000a81548160ff0219169083600381111561242c57fe5b0217905550817fc756dae6c6da0abc4ce6343ee4a6a81c74f1dbbce1ce8a5ca3a765b53203c19f82604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a281819450945050505094509492505050565b60035481565b6124b5612883565b60008490506124c2612912565b600860008781526020019081526020016000206040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160018201548152602001600282015481526020016003820154815250509050600061256a826060015183604001516120d6565b905060008583604001510290506000818303905060008090506000809050600081830185039050600081905061259e612883565b6040518061018001604052808a6000015173ffffffffffffffffffffffffffffffffffffffff1681526020018e73ffffffffffffffffffffffffffffffffffffffff1681526020018a6020015181526020018a6040015181526020018d8152602001600015158152602001848152602001898152602001878152602001838152602001868152602001858152509050809a50505050505050505050509392505050565b6000151561264e336114f0565b1515146126a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602781526020018061327d6027913960400191505060405180910390fd5b600154600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600354600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b60011515612741336114f0565b151514612799576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602b8152602001806132fe602b913960400191505060405180910390fd5b6127a233611fbc565b6127f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806132d96025913960400191505060405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550565b604051806101800160405280600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081526020016000151581526020016000815260200160008152602001600081526020016000815260200160008152602001600081525090565b6040518060800160405280600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160008152602001600081525090565b6108cb8061295e8339019056fe608060405234801561001057600080fd5b506040516108cb3803806108cb8339818101604052608081101561003357600080fd5b8101908080519060200190929190805190602001909291908051906020019092919080519060200190929190505050836000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060008060146101000a81548160ff021916908360018111156100c057fe5b021790555082600181905550816002819055504260038190555080600481905550816005819055506000600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505061078e8061013d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80635d06978f1161005b5780635d06978f1461014a57806361dcd7ab14610168578063c19d93fb14610186578063c8e7b31d146101b25761007d565b80632a24f46c146100825780634840f2f0146100de57806359d667a5146100fc575b600080fd5b61008a6101d0565b60405180841515151581526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001828152602001935050505060405180910390f35b6100e6610325565b6040518082815260200191505060405180910390f35b6101486004803603604081101561011257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061032b565b005b610152610599565b6040518082815260200191505060405180910390f35b61017061059f565b6040518082815260200191505060405180910390f35b61018e6105a5565b6040518082600181111561019e57fe5b60ff16815260200191505060405180910390f35b6101ba6105b8565b6040518082815260200191505060405180910390f35b60008060008060018111156101e157fe5b600060149054906101000a900460ff1660018111156101fc57fe5b14801561020e57506004546003540142115b1561021c5761021b6105be565b5b600180600181111561022a57fe5b600060149054906101000a900460ff16600181111561024557fe5b1461029b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806107236036913960400191505060405180910390fd5b60008073ffffffffffffffffffffffffffffffffffffffff16600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161415905080600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005549450945094505050909192565b60025481565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b8152602001806106e8603b913960400191505060405180910390fd5b600060018111156103dd57fe5b600060149054906101000a900460ff1660018111156103f857fe5b14801561040a57506004546003540142115b15610418576104176105be565b5b600080600181111561042657fe5b600060149054906101000a900460ff16600181111561044157fe5b14610497576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806107236036913960400191505060405180910390fd5b6002548211156104f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604a81526020018061069e604a913960600191505060405180910390fd5b600554821061054c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603381526020018061066b6033913960400191505060405180910390fd5b8160058190555082600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60015481565b60035481565b600060149054906101000a900460ff1681565b60045481565b600060018111156105cb57fe5b600060149054906101000a900460ff1660018111156105e657fe5b1415610615576001600060146101000a81548160ff0219169083600181111561060b57fe5b0217905550610668565b60018081111561062157fe5b600060149054906101000a900460ff16600181111561063c57fe5b1415610667576001600060146101000a81548160ff0219169083600181111561066157fe5b02179055505b5b56fe53696d706c6541756374696f6e3a20746865726520616c72656164792069732061206c6f7765722075696e742d70726963652e53696d706c6541756374696f6e3a2074686520756e69742d707269636520697320686967686572207468616e20686967686573742074686520637573746f6d657220616363657074656453696d706c6541756374696f6e3a206f6e6c79206d61726b657420636f6e6374726163742063616e2063616c6c20746869732066756e6369746f6e53696d706c6541756374696f6e3a2066756e6374696f6e2063616e6e6f742062652063616c6c65642061742074686973207374617465a264697066735822122040d46e20005969c88558fb747bdc09e13e96184d64c033c0d995fcd76ca30b0464736f6c634300060a00334d61726b65743a206661696c656420746f207061792061207265676973746572206465706f7369744d61726b65743a206f6e6c79205769746e657373506f6f6c20436f6e74726163742063616e207265706f72744d61726b65743a20746865206164647265737320686164206265656e20726567697374657265644d61746b65743a2066756e6374696f6e2063616e6e6f742062652063616c6c65642061742074686973206f726465722073746174654d61726b65743a207468652070726f7669646572206973206e6f74207175616c69666965644d61726b65743a20746865206164647265737320686164206e6f74206265656e20726567697374657265646c6f636b20666565206265666f7265206372656174696e67206465706c6f796d656e74206f726465724d61726b65743a206661696c656420746f20726566756e64207468652070726f7669646572206465706f736974a264697066735822122047c40409dc9890b5ba1ecb8a7aa8a008ccf7de15e3c829854676141ddb627cf564736f6c634300060a0033"

// DeployMarket deploys a new contract, binding an instance of Market to it.
func DeployMarket(auth *bind.TransactOpts, backend bind.ContractBackend, _tokenContractAddress common.Address) (common.Address, *types.Transaction, *Market, error) {
	parsed, err := abi.JSON(strings.NewReader(MarketABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(MarketBin), backend, _tokenContractAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &Market{MarketCaller: MarketCaller{contract: contract}, MarketTransactor: MarketTransactor{contract: contract}, MarketFilterer: MarketFilterer{contract: contract}}, nil
}

func AsyncDeployMarket(auth *bind.TransactOpts, handler func(*types.Receipt, error), backend bind.ContractBackend, _tokenContractAddress common.Address) (*types.Transaction, error) {
	parsed, err := abi.JSON(strings.NewReader(MarketABI))
	if err != nil {
		return nil, err
	}

	tx, err := bind.AsyncDeployContract(auth, handler, parsed, common.FromHex(MarketBin), backend, _tokenContractAddress)
	if err != nil {
		return nil, err
	}
	return tx, nil
}

// Market is an auto generated Go binding around a Solidity contract.
type Market struct {
	MarketCaller     // Read-only binding to the contract
	MarketTransactor // Write-only binding to the contract
	MarketFilterer   // Log filterer for contract events
}

// MarketCaller is an auto generated read-only Go binding around a Solidity contract.
type MarketCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MarketTransactor is an auto generated write-only Go binding around a Solidity contract.
type MarketTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MarketFilterer is an auto generated log filtering Go binding around a Solidity contract events.
type MarketFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// MarketSession is an auto generated Go binding around a Solidity contract,
// with pre-set call and transact options.
type MarketSession struct {
	Contract     *Market           // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// MarketCallerSession is an auto generated read-only Go binding around a Solidity contract,
// with pre-set call options.
type MarketCallerSession struct {
	Contract *MarketCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts // Call options to use throughout this session
}

// MarketTransactorSession is an auto generated write-only Go binding around a Solidity contract,
// with pre-set transact options.
type MarketTransactorSession struct {
	Contract     *MarketTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// MarketRaw is an auto generated low-level Go binding around a Solidity contract.
type MarketRaw struct {
	Contract *Market // Generic contract binding to access the raw methods on
}

// MarketCallerRaw is an auto generated low-level read-only Go binding around a Solidity contract.
type MarketCallerRaw struct {
	Contract *MarketCaller // Generic read-only contract binding to access the raw methods on
}

// MarketTransactorRaw is an auto generated low-level write-only Go binding around a Solidity contract.
type MarketTransactorRaw struct {
	Contract *MarketTransactor // Generic write-only contract binding to access the raw methods on
}

// NewMarket creates a new instance of Market, bound to a specific deployed contract.
func NewMarket(address common.Address, backend bind.ContractBackend) (*Market, error) {
	contract, err := bindMarket(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &Market{MarketCaller: MarketCaller{contract: contract}, MarketTransactor: MarketTransactor{contract: contract}, MarketFilterer: MarketFilterer{contract: contract}}, nil
}

// NewMarketCaller creates a new read-only instance of Market, bound to a specific deployed contract.
func NewMarketCaller(address common.Address, caller bind.ContractCaller) (*MarketCaller, error) {
	contract, err := bindMarket(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &MarketCaller{contract: contract}, nil
}

// NewMarketTransactor creates a new write-only instance of Market, bound to a specific deployed contract.
func NewMarketTransactor(address common.Address, transactor bind.ContractTransactor) (*MarketTransactor, error) {
	contract, err := bindMarket(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &MarketTransactor{contract: contract}, nil
}

// NewMarketFilterer creates a new log filterer instance of Market, bound to a specific deployed contract.
func NewMarketFilterer(address common.Address, filterer bind.ContractFilterer) (*MarketFilterer, error) {
	contract, err := bindMarket(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &MarketFilterer{contract: contract}, nil
}

// bindMarket binds a generic wrapper to an already deployed contract.
func bindMarket(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(MarketABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Market *MarketRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Market.Contract.MarketCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Market *MarketRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.MarketTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Market *MarketRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.MarketTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_Market *MarketCallerRaw) Call(opts *bind.CallOpts, result interface{}, method string, params ...interface{}) error {
	return _Market.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_Market *MarketTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_Market *MarketTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.contract.Transact(opts, method, params...)
}

// Auctions is a free data retrieval call binding the contract method 0x571a26a0.
//
// Solidity: function auctions(uint256 ) constant returns(address)
func (_Market *MarketCaller) Auctions(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Market.contract.Call(opts, out, "auctions", arg0)
	return *ret0, err
}

// Auctions is a free data retrieval call binding the contract method 0x571a26a0.
//
// Solidity: function auctions(uint256 ) constant returns(address)
func (_Market *MarketSession) Auctions(arg0 *big.Int) (common.Address, error) {
	return _Market.Contract.Auctions(&_Market.CallOpts, arg0)
}

// Auctions is a free data retrieval call binding the contract method 0x571a26a0.
//
// Solidity: function auctions(uint256 ) constant returns(address)
func (_Market *MarketCallerSession) Auctions(arg0 *big.Int) (common.Address, error) {
	return _Market.Contract.Auctions(&_Market.CallOpts, arg0)
}

// DeploymentOrders is a free data retrieval call binding the contract method 0x5aeedd4d.
//
// Solidity: function deploymentOrders(uint256 ) constant returns(address customer, uint256 faaSLevelID, uint256 faaSDuration, uint256 highestUnitPrice)
func (_Market *MarketCaller) DeploymentOrders(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Customer         common.Address
	FaaSLevelID      *big.Int
	FaaSDuration     *big.Int
	HighestUnitPrice *big.Int
}, error) {
	ret := new(struct {
		Customer         common.Address
		FaaSLevelID      *big.Int
		FaaSDuration     *big.Int
		HighestUnitPrice *big.Int
	})
	out := ret
	err := _Market.contract.Call(opts, out, "deploymentOrders", arg0)
	return *ret, err
}

// DeploymentOrders is a free data retrieval call binding the contract method 0x5aeedd4d.
//
// Solidity: function deploymentOrders(uint256 ) constant returns(address customer, uint256 faaSLevelID, uint256 faaSDuration, uint256 highestUnitPrice)
func (_Market *MarketSession) DeploymentOrders(arg0 *big.Int) (struct {
	Customer         common.Address
	FaaSLevelID      *big.Int
	FaaSDuration     *big.Int
	HighestUnitPrice *big.Int
}, error) {
	return _Market.Contract.DeploymentOrders(&_Market.CallOpts, arg0)
}

// DeploymentOrders is a free data retrieval call binding the contract method 0x5aeedd4d.
//
// Solidity: function deploymentOrders(uint256 ) constant returns(address customer, uint256 faaSLevelID, uint256 faaSDuration, uint256 highestUnitPrice)
func (_Market *MarketCallerSession) DeploymentOrders(arg0 *big.Int) (struct {
	Customer         common.Address
	FaaSLevelID      *big.Int
	FaaSDuration     *big.Int
	HighestUnitPrice *big.Int
}, error) {
	return _Market.Contract.DeploymentOrders(&_Market.CallOpts, arg0)
}

// GetDeploymentOrder is a free data retrieval call binding the contract method 0xce67ca03.
//
// Solidity: function getDeploymentOrder(uint256 _deploymentOrderID) constant returns(address, uint256, uint256, uint256)
func (_Market *MarketCaller) GetDeploymentOrder(opts *bind.CallOpts, _deploymentOrderID *big.Int) (common.Address, *big.Int, *big.Int, *big.Int, error) {
	var (
		ret0 = new(common.Address)
		ret1 = new(*big.Int)
		ret2 = new(*big.Int)
		ret3 = new(*big.Int)
	)
	out := &[]interface{}{
		ret0,
		ret1,
		ret2,
		ret3,
	}
	err := _Market.contract.Call(opts, out, "getDeploymentOrder", _deploymentOrderID)
	return *ret0, *ret1, *ret2, *ret3, err
}

// GetDeploymentOrder is a free data retrieval call binding the contract method 0xce67ca03.
//
// Solidity: function getDeploymentOrder(uint256 _deploymentOrderID) constant returns(address, uint256, uint256, uint256)
func (_Market *MarketSession) GetDeploymentOrder(_deploymentOrderID *big.Int) (common.Address, *big.Int, *big.Int, *big.Int, error) {
	return _Market.Contract.GetDeploymentOrder(&_Market.CallOpts, _deploymentOrderID)
}

// GetDeploymentOrder is a free data retrieval call binding the contract method 0xce67ca03.
//
// Solidity: function getDeploymentOrder(uint256 _deploymentOrderID) constant returns(address, uint256, uint256, uint256)
func (_Market *MarketCallerSession) GetDeploymentOrder(_deploymentOrderID *big.Int) (common.Address, *big.Int, *big.Int, *big.Int, error) {
	return _Market.Contract.GetDeploymentOrder(&_Market.CallOpts, _deploymentOrderID)
}

// GetDeploymentOrderLockFee is a free data retrieval call binding the contract method 0xd5344529.
//
// Solidity: function getDeploymentOrderLockFee(uint256 _highestUnitPrice, uint256 _faaSDuration) constant returns(uint256)
func (_Market *MarketCaller) GetDeploymentOrderLockFee(opts *bind.CallOpts, _highestUnitPrice *big.Int, _faaSDuration *big.Int) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Market.contract.Call(opts, out, "getDeploymentOrderLockFee", _highestUnitPrice, _faaSDuration)
	return *ret0, err
}

// GetDeploymentOrderLockFee is a free data retrieval call binding the contract method 0xd5344529.
//
// Solidity: function getDeploymentOrderLockFee(uint256 _highestUnitPrice, uint256 _faaSDuration) constant returns(uint256)
func (_Market *MarketSession) GetDeploymentOrderLockFee(_highestUnitPrice *big.Int, _faaSDuration *big.Int) (*big.Int, error) {
	return _Market.Contract.GetDeploymentOrderLockFee(&_Market.CallOpts, _highestUnitPrice, _faaSDuration)
}

// GetDeploymentOrderLockFee is a free data retrieval call binding the contract method 0xd5344529.
//
// Solidity: function getDeploymentOrderLockFee(uint256 _highestUnitPrice, uint256 _faaSDuration) constant returns(uint256)
func (_Market *MarketCallerSession) GetDeploymentOrderLockFee(_highestUnitPrice *big.Int, _faaSDuration *big.Int) (*big.Int, error) {
	return _Market.Contract.GetDeploymentOrderLockFee(&_Market.CallOpts, _highestUnitPrice, _faaSDuration)
}

// GetProviderDeposit is a free data retrieval call binding the contract method 0x61bb20f0.
//
// Solidity: function getProviderDeposit(address _provider) constant returns(uint256)
func (_Market *MarketCaller) GetProviderDeposit(opts *bind.CallOpts, _provider common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Market.contract.Call(opts, out, "getProviderDeposit", _provider)
	return *ret0, err
}

// GetProviderDeposit is a free data retrieval call binding the contract method 0x61bb20f0.
//
// Solidity: function getProviderDeposit(address _provider) constant returns(uint256)
func (_Market *MarketSession) GetProviderDeposit(_provider common.Address) (*big.Int, error) {
	return _Market.Contract.GetProviderDeposit(&_Market.CallOpts, _provider)
}

// GetProviderDeposit is a free data retrieval call binding the contract method 0x61bb20f0.
//
// Solidity: function getProviderDeposit(address _provider) constant returns(uint256)
func (_Market *MarketCallerSession) GetProviderDeposit(_provider common.Address) (*big.Int, error) {
	return _Market.Contract.GetProviderDeposit(&_Market.CallOpts, _provider)
}

// GetProviderReputation is a free data retrieval call binding the contract method 0x729d98e9.
//
// Solidity: function getProviderReputation(address _provider) constant returns(uint256)
func (_Market *MarketCaller) GetProviderReputation(opts *bind.CallOpts, _provider common.Address) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Market.contract.Call(opts, out, "getProviderReputation", _provider)
	return *ret0, err
}

// GetProviderReputation is a free data retrieval call binding the contract method 0x729d98e9.
//
// Solidity: function getProviderReputation(address _provider) constant returns(uint256)
func (_Market *MarketSession) GetProviderReputation(_provider common.Address) (*big.Int, error) {
	return _Market.Contract.GetProviderReputation(&_Market.CallOpts, _provider)
}

// GetProviderReputation is a free data retrieval call binding the contract method 0x729d98e9.
//
// Solidity: function getProviderReputation(address _provider) constant returns(uint256)
func (_Market *MarketCallerSession) GetProviderReputation(_provider common.Address) (*big.Int, error) {
	return _Market.Contract.GetProviderReputation(&_Market.CallOpts, _provider)
}

// IsProviderQualified is a free data retrieval call binding the contract method 0xb8296471.
//
// Solidity: function isProviderQualified(address _provider) constant returns(bool)
func (_Market *MarketCaller) IsProviderQualified(opts *bind.CallOpts, _provider common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Market.contract.Call(opts, out, "isProviderQualified", _provider)
	return *ret0, err
}

// IsProviderQualified is a free data retrieval call binding the contract method 0xb8296471.
//
// Solidity: function isProviderQualified(address _provider) constant returns(bool)
func (_Market *MarketSession) IsProviderQualified(_provider common.Address) (bool, error) {
	return _Market.Contract.IsProviderQualified(&_Market.CallOpts, _provider)
}

// IsProviderQualified is a free data retrieval call binding the contract method 0xb8296471.
//
// Solidity: function isProviderQualified(address _provider) constant returns(bool)
func (_Market *MarketCallerSession) IsProviderQualified(_provider common.Address) (bool, error) {
	return _Market.Contract.IsProviderQualified(&_Market.CallOpts, _provider)
}

// IsProviderRegistered is a free data retrieval call binding the contract method 0x1ead914e.
//
// Solidity: function isProviderRegistered(address _provider) constant returns(bool)
func (_Market *MarketCaller) IsProviderRegistered(opts *bind.CallOpts, _provider common.Address) (bool, error) {
	var (
		ret0 = new(bool)
	)
	out := ret0
	err := _Market.contract.Call(opts, out, "isProviderRegistered", _provider)
	return *ret0, err
}

// IsProviderRegistered is a free data retrieval call binding the contract method 0x1ead914e.
//
// Solidity: function isProviderRegistered(address _provider) constant returns(bool)
func (_Market *MarketSession) IsProviderRegistered(_provider common.Address) (bool, error) {
	return _Market.Contract.IsProviderRegistered(&_Market.CallOpts, _provider)
}

// IsProviderRegistered is a free data retrieval call binding the contract method 0x1ead914e.
//
// Solidity: function isProviderRegistered(address _provider) constant returns(bool)
func (_Market *MarketCallerSession) IsProviderRegistered(_provider common.Address) (bool, error) {
	return _Market.Contract.IsProviderRegistered(&_Market.CallOpts, _provider)
}

// Leases is a free data retrieval call binding the contract method 0x8927a106.
//
// Solidity: function leases(uint256 ) constant returns(address customer, address provider, uint256 faaSLevelID, uint256 faaSDuration, uint256 unitPrice, bool isViolatedSLA, uint256 providerServiceFee, uint256 customerLockFee, uint256 customerWithdrawFee, uint256 customerCompensationFee, uint256 witnessFee, uint256 maintainerFee)
func (_Market *MarketCaller) Leases(opts *bind.CallOpts, arg0 *big.Int) (struct {
	Customer                common.Address
	Provider                common.Address
	FaaSLevelID             *big.Int
	FaaSDuration            *big.Int
	UnitPrice               *big.Int
	IsViolatedSLA           bool
	ProviderServiceFee      *big.Int
	CustomerLockFee         *big.Int
	CustomerWithdrawFee     *big.Int
	CustomerCompensationFee *big.Int
	WitnessFee              *big.Int
	MaintainerFee           *big.Int
}, error) {
	ret := new(struct {
		Customer                common.Address
		Provider                common.Address
		FaaSLevelID             *big.Int
		FaaSDuration            *big.Int
		UnitPrice               *big.Int
		IsViolatedSLA           bool
		ProviderServiceFee      *big.Int
		CustomerLockFee         *big.Int
		CustomerWithdrawFee     *big.Int
		CustomerCompensationFee *big.Int
		WitnessFee              *big.Int
		MaintainerFee           *big.Int
	})
	out := ret
	err := _Market.contract.Call(opts, out, "leases", arg0)
	return *ret, err
}

// Leases is a free data retrieval call binding the contract method 0x8927a106.
//
// Solidity: function leases(uint256 ) constant returns(address customer, address provider, uint256 faaSLevelID, uint256 faaSDuration, uint256 unitPrice, bool isViolatedSLA, uint256 providerServiceFee, uint256 customerLockFee, uint256 customerWithdrawFee, uint256 customerCompensationFee, uint256 witnessFee, uint256 maintainerFee)
func (_Market *MarketSession) Leases(arg0 *big.Int) (struct {
	Customer                common.Address
	Provider                common.Address
	FaaSLevelID             *big.Int
	FaaSDuration            *big.Int
	UnitPrice               *big.Int
	IsViolatedSLA           bool
	ProviderServiceFee      *big.Int
	CustomerLockFee         *big.Int
	CustomerWithdrawFee     *big.Int
	CustomerCompensationFee *big.Int
	WitnessFee              *big.Int
	MaintainerFee           *big.Int
}, error) {
	return _Market.Contract.Leases(&_Market.CallOpts, arg0)
}

// Leases is a free data retrieval call binding the contract method 0x8927a106.
//
// Solidity: function leases(uint256 ) constant returns(address customer, address provider, uint256 faaSLevelID, uint256 faaSDuration, uint256 unitPrice, bool isViolatedSLA, uint256 providerServiceFee, uint256 customerLockFee, uint256 customerWithdrawFee, uint256 customerCompensationFee, uint256 witnessFee, uint256 maintainerFee)
func (_Market *MarketCallerSession) Leases(arg0 *big.Int) (struct {
	Customer                common.Address
	Provider                common.Address
	FaaSLevelID             *big.Int
	FaaSDuration            *big.Int
	UnitPrice               *big.Int
	IsViolatedSLA           bool
	ProviderServiceFee      *big.Int
	CustomerLockFee         *big.Int
	CustomerWithdrawFee     *big.Int
	CustomerCompensationFee *big.Int
	WitnessFee              *big.Int
	MaintainerFee           *big.Int
}, error) {
	return _Market.Contract.Leases(&_Market.CallOpts, arg0)
}

// NumDeploymentOrders is a free data retrieval call binding the contract method 0xc165f722.
//
// Solidity: function numDeploymentOrders() constant returns(uint256)
func (_Market *MarketCaller) NumDeploymentOrders(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Market.contract.Call(opts, out, "numDeploymentOrders")
	return *ret0, err
}

// NumDeploymentOrders is a free data retrieval call binding the contract method 0xc165f722.
//
// Solidity: function numDeploymentOrders() constant returns(uint256)
func (_Market *MarketSession) NumDeploymentOrders() (*big.Int, error) {
	return _Market.Contract.NumDeploymentOrders(&_Market.CallOpts)
}

// NumDeploymentOrders is a free data retrieval call binding the contract method 0xc165f722.
//
// Solidity: function numDeploymentOrders() constant returns(uint256)
func (_Market *MarketCallerSession) NumDeploymentOrders() (*big.Int, error) {
	return _Market.Contract.NumDeploymentOrders(&_Market.CallOpts)
}

// ProviderReputationInit is a free data retrieval call binding the contract method 0xf0611e38.
//
// Solidity: function providerReputationInit() constant returns(uint256)
func (_Market *MarketCaller) ProviderReputationInit(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Market.contract.Call(opts, out, "providerReputationInit")
	return *ret0, err
}

// ProviderReputationInit is a free data retrieval call binding the contract method 0xf0611e38.
//
// Solidity: function providerReputationInit() constant returns(uint256)
func (_Market *MarketSession) ProviderReputationInit() (*big.Int, error) {
	return _Market.Contract.ProviderReputationInit(&_Market.CallOpts)
}

// ProviderReputationInit is a free data retrieval call binding the contract method 0xf0611e38.
//
// Solidity: function providerReputationInit() constant returns(uint256)
func (_Market *MarketCallerSession) ProviderReputationInit() (*big.Int, error) {
	return _Market.Contract.ProviderReputationInit(&_Market.CallOpts)
}

// ProviderReputationQualified is a free data retrieval call binding the contract method 0x21521892.
//
// Solidity: function providerReputationQualified() constant returns(uint256)
func (_Market *MarketCaller) ProviderReputationQualified(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Market.contract.Call(opts, out, "providerReputationQualified")
	return *ret0, err
}

// ProviderReputationQualified is a free data retrieval call binding the contract method 0x21521892.
//
// Solidity: function providerReputationQualified() constant returns(uint256)
func (_Market *MarketSession) ProviderReputationQualified() (*big.Int, error) {
	return _Market.Contract.ProviderReputationQualified(&_Market.CallOpts)
}

// ProviderReputationQualified is a free data retrieval call binding the contract method 0x21521892.
//
// Solidity: function providerReputationQualified() constant returns(uint256)
func (_Market *MarketCallerSession) ProviderReputationQualified() (*big.Int, error) {
	return _Market.Contract.ProviderReputationQualified(&_Market.CallOpts)
}

// StdProviderDeposit is a free data retrieval call binding the contract method 0x0bca42ae.
//
// Solidity: function stdProviderDeposit() constant returns(uint256)
func (_Market *MarketCaller) StdProviderDeposit(opts *bind.CallOpts) (*big.Int, error) {
	var (
		ret0 = new(*big.Int)
	)
	out := ret0
	err := _Market.contract.Call(opts, out, "stdProviderDeposit")
	return *ret0, err
}

// StdProviderDeposit is a free data retrieval call binding the contract method 0x0bca42ae.
//
// Solidity: function stdProviderDeposit() constant returns(uint256)
func (_Market *MarketSession) StdProviderDeposit() (*big.Int, error) {
	return _Market.Contract.StdProviderDeposit(&_Market.CallOpts)
}

// StdProviderDeposit is a free data retrieval call binding the contract method 0x0bca42ae.
//
// Solidity: function stdProviderDeposit() constant returns(uint256)
func (_Market *MarketCallerSession) StdProviderDeposit() (*big.Int, error) {
	return _Market.Contract.StdProviderDeposit(&_Market.CallOpts)
}

// TokenContract is a free data retrieval call binding the contract method 0x55a373d6.
//
// Solidity: function tokenContract() constant returns(address)
func (_Market *MarketCaller) TokenContract(opts *bind.CallOpts) (common.Address, error) {
	var (
		ret0 = new(common.Address)
	)
	out := ret0
	err := _Market.contract.Call(opts, out, "tokenContract")
	return *ret0, err
}

// TokenContract is a free data retrieval call binding the contract method 0x55a373d6.
//
// Solidity: function tokenContract() constant returns(address)
func (_Market *MarketSession) TokenContract() (common.Address, error) {
	return _Market.Contract.TokenContract(&_Market.CallOpts)
}

// TokenContract is a free data retrieval call binding the contract method 0x55a373d6.
//
// Solidity: function tokenContract() constant returns(address)
func (_Market *MarketCallerSession) TokenContract() (common.Address, error) {
	return _Market.Contract.TokenContract(&_Market.CallOpts)
}

// Bid is a paid mutator transaction binding the contract method 0x598647f8.
//
// Solidity: function bid(uint256 _deploymentOrderID, uint256 _unitPrice) returns()
func (_Market *MarketTransactor) Bid(opts *bind.TransactOpts, _deploymentOrderID *big.Int, _unitPrice *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Market.contract.Transact(opts, "bid", _deploymentOrderID, _unitPrice)
}

func (_Market *MarketTransactor) AsyncBid(handler func(*types.Receipt, error), opts *bind.TransactOpts, _deploymentOrderID *big.Int, _unitPrice *big.Int) (*types.Transaction, error) {
	return _Market.contract.AsyncTransact(opts, handler, "bid", _deploymentOrderID, _unitPrice)
}

// Bid is a paid mutator transaction binding the contract method 0x598647f8.
//
// Solidity: function bid(uint256 _deploymentOrderID, uint256 _unitPrice) returns()
func (_Market *MarketSession) Bid(_deploymentOrderID *big.Int, _unitPrice *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.Bid(&_Market.TransactOpts, _deploymentOrderID, _unitPrice)
}

func (_Market *MarketSession) AsyncBid(handler func(*types.Receipt, error), _deploymentOrderID *big.Int, _unitPrice *big.Int) (*types.Transaction, error) {
	return _Market.Contract.AsyncBid(handler, &_Market.TransactOpts, _deploymentOrderID, _unitPrice)
}

// Bid is a paid mutator transaction binding the contract method 0x598647f8.
//
// Solidity: function bid(uint256 _deploymentOrderID, uint256 _unitPrice) returns()
func (_Market *MarketTransactorSession) Bid(_deploymentOrderID *big.Int, _unitPrice *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.Bid(&_Market.TransactOpts, _deploymentOrderID, _unitPrice)
}

func (_Market *MarketTransactorSession) AsyncBid(handler func(*types.Receipt, error), _deploymentOrderID *big.Int, _unitPrice *big.Int) (*types.Transaction, error) {
	return _Market.Contract.AsyncBid(handler, &_Market.TransactOpts, _deploymentOrderID, _unitPrice)
}

// MatchDeploymentOrder is a paid mutator transaction binding the contract method 0x18f645fa.
//
// Solidity: function matchDeploymentOrder(uint256 _deploymentOrderID) returns(bool, string)
func (_Market *MarketTransactor) MatchDeploymentOrder(opts *bind.TransactOpts, _deploymentOrderID *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Market.contract.Transact(opts, "matchDeploymentOrder", _deploymentOrderID)
}

func (_Market *MarketTransactor) AsyncMatchDeploymentOrder(handler func(*types.Receipt, error), opts *bind.TransactOpts, _deploymentOrderID *big.Int) (*types.Transaction, error) {
	return _Market.contract.AsyncTransact(opts, handler, "matchDeploymentOrder", _deploymentOrderID)
}

// MatchDeploymentOrder is a paid mutator transaction binding the contract method 0x18f645fa.
//
// Solidity: function matchDeploymentOrder(uint256 _deploymentOrderID) returns(bool, string)
func (_Market *MarketSession) MatchDeploymentOrder(_deploymentOrderID *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.MatchDeploymentOrder(&_Market.TransactOpts, _deploymentOrderID)
}

func (_Market *MarketSession) AsyncMatchDeploymentOrder(handler func(*types.Receipt, error), _deploymentOrderID *big.Int) (*types.Transaction, error) {
	return _Market.Contract.AsyncMatchDeploymentOrder(handler, &_Market.TransactOpts, _deploymentOrderID)
}

// MatchDeploymentOrder is a paid mutator transaction binding the contract method 0x18f645fa.
//
// Solidity: function matchDeploymentOrder(uint256 _deploymentOrderID) returns(bool, string)
func (_Market *MarketTransactorSession) MatchDeploymentOrder(_deploymentOrderID *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.MatchDeploymentOrder(&_Market.TransactOpts, _deploymentOrderID)
}

func (_Market *MarketTransactorSession) AsyncMatchDeploymentOrder(handler func(*types.Receipt, error), _deploymentOrderID *big.Int) (*types.Transaction, error) {
	return _Market.Contract.AsyncMatchDeploymentOrder(handler, &_Market.TransactOpts, _deploymentOrderID)
}

// NewDeploymentOrder is a paid mutator transaction binding the contract method 0xdbd4314f.
//
// Solidity: function newDeploymentOrder(uint256 _faaSLevelID, uint256 _highestUnitPrice, uint256 _faaSDuration, uint256 _biddingDuration) returns(uint256, address)
func (_Market *MarketTransactor) NewDeploymentOrder(opts *bind.TransactOpts, _faaSLevelID *big.Int, _highestUnitPrice *big.Int, _faaSDuration *big.Int, _biddingDuration *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Market.contract.Transact(opts, "newDeploymentOrder", _faaSLevelID, _highestUnitPrice, _faaSDuration, _biddingDuration)
}

func (_Market *MarketTransactor) AsyncNewDeploymentOrder(handler func(*types.Receipt, error), opts *bind.TransactOpts, _faaSLevelID *big.Int, _highestUnitPrice *big.Int, _faaSDuration *big.Int, _biddingDuration *big.Int) (*types.Transaction, error) {
	return _Market.contract.AsyncTransact(opts, handler, "newDeploymentOrder", _faaSLevelID, _highestUnitPrice, _faaSDuration, _biddingDuration)
}

// NewDeploymentOrder is a paid mutator transaction binding the contract method 0xdbd4314f.
//
// Solidity: function newDeploymentOrder(uint256 _faaSLevelID, uint256 _highestUnitPrice, uint256 _faaSDuration, uint256 _biddingDuration) returns(uint256, address)
func (_Market *MarketSession) NewDeploymentOrder(_faaSLevelID *big.Int, _highestUnitPrice *big.Int, _faaSDuration *big.Int, _biddingDuration *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.NewDeploymentOrder(&_Market.TransactOpts, _faaSLevelID, _highestUnitPrice, _faaSDuration, _biddingDuration)
}

func (_Market *MarketSession) AsyncNewDeploymentOrder(handler func(*types.Receipt, error), _faaSLevelID *big.Int, _highestUnitPrice *big.Int, _faaSDuration *big.Int, _biddingDuration *big.Int) (*types.Transaction, error) {
	return _Market.Contract.AsyncNewDeploymentOrder(handler, &_Market.TransactOpts, _faaSLevelID, _highestUnitPrice, _faaSDuration, _biddingDuration)
}

// NewDeploymentOrder is a paid mutator transaction binding the contract method 0xdbd4314f.
//
// Solidity: function newDeploymentOrder(uint256 _faaSLevelID, uint256 _highestUnitPrice, uint256 _faaSDuration, uint256 _biddingDuration) returns(uint256, address)
func (_Market *MarketTransactorSession) NewDeploymentOrder(_faaSLevelID *big.Int, _highestUnitPrice *big.Int, _faaSDuration *big.Int, _biddingDuration *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.NewDeploymentOrder(&_Market.TransactOpts, _faaSLevelID, _highestUnitPrice, _faaSDuration, _biddingDuration)
}

func (_Market *MarketTransactorSession) AsyncNewDeploymentOrder(handler func(*types.Receipt, error), _faaSLevelID *big.Int, _highestUnitPrice *big.Int, _faaSDuration *big.Int, _biddingDuration *big.Int) (*types.Transaction, error) {
	return _Market.Contract.AsyncNewDeploymentOrder(handler, &_Market.TransactOpts, _faaSLevelID, _highestUnitPrice, _faaSDuration, _biddingDuration)
}

// ProviderLogin is a paid mutator transaction binding the contract method 0x2bf35570.
//
// Solidity: function providerLogin() returns()
func (_Market *MarketTransactor) ProviderLogin(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _Market.contract.Transact(opts, "providerLogin")
}

func (_Market *MarketTransactor) AsyncProviderLogin(handler func(*types.Receipt, error), opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Market.contract.AsyncTransact(opts, handler, "providerLogin")
}

// ProviderLogin is a paid mutator transaction binding the contract method 0x2bf35570.
//
// Solidity: function providerLogin() returns()
func (_Market *MarketSession) ProviderLogin() (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.ProviderLogin(&_Market.TransactOpts)
}

func (_Market *MarketSession) AsyncProviderLogin(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _Market.Contract.AsyncProviderLogin(handler, &_Market.TransactOpts)
}

// ProviderLogin is a paid mutator transaction binding the contract method 0x2bf35570.
//
// Solidity: function providerLogin() returns()
func (_Market *MarketTransactorSession) ProviderLogin() (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.ProviderLogin(&_Market.TransactOpts)
}

func (_Market *MarketTransactorSession) AsyncProviderLogin(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _Market.Contract.AsyncProviderLogin(handler, &_Market.TransactOpts)
}

// ProviderLogout is a paid mutator transaction binding the contract method 0x884eacb8.
//
// Solidity: function providerLogout() returns()
func (_Market *MarketTransactor) ProviderLogout(opts *bind.TransactOpts) (*types.Transaction, *types.Receipt, error) {
	return _Market.contract.Transact(opts, "providerLogout")
}

func (_Market *MarketTransactor) AsyncProviderLogout(handler func(*types.Receipt, error), opts *bind.TransactOpts) (*types.Transaction, error) {
	return _Market.contract.AsyncTransact(opts, handler, "providerLogout")
}

// ProviderLogout is a paid mutator transaction binding the contract method 0x884eacb8.
//
// Solidity: function providerLogout() returns()
func (_Market *MarketSession) ProviderLogout() (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.ProviderLogout(&_Market.TransactOpts)
}

func (_Market *MarketSession) AsyncProviderLogout(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _Market.Contract.AsyncProviderLogout(handler, &_Market.TransactOpts)
}

// ProviderLogout is a paid mutator transaction binding the contract method 0x884eacb8.
//
// Solidity: function providerLogout() returns()
func (_Market *MarketTransactorSession) ProviderLogout() (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.ProviderLogout(&_Market.TransactOpts)
}

func (_Market *MarketTransactorSession) AsyncProviderLogout(handler func(*types.Receipt, error)) (*types.Transaction, error) {
	return _Market.Contract.AsyncProviderLogout(handler, &_Market.TransactOpts)
}

// ReportDeploymemtOrder is a paid mutator transaction binding the contract method 0x747a1ba2.
//
// Solidity: function reportDeploymemtOrder(uint256 _delpoymentOrderID, bool _isViolatedSLA) returns()
func (_Market *MarketTransactor) ReportDeploymemtOrder(opts *bind.TransactOpts, _delpoymentOrderID *big.Int, _isViolatedSLA bool) (*types.Transaction, *types.Receipt, error) {
	return _Market.contract.Transact(opts, "reportDeploymemtOrder", _delpoymentOrderID, _isViolatedSLA)
}

func (_Market *MarketTransactor) AsyncReportDeploymemtOrder(handler func(*types.Receipt, error), opts *bind.TransactOpts, _delpoymentOrderID *big.Int, _isViolatedSLA bool) (*types.Transaction, error) {
	return _Market.contract.AsyncTransact(opts, handler, "reportDeploymemtOrder", _delpoymentOrderID, _isViolatedSLA)
}

// ReportDeploymemtOrder is a paid mutator transaction binding the contract method 0x747a1ba2.
//
// Solidity: function reportDeploymemtOrder(uint256 _delpoymentOrderID, bool _isViolatedSLA) returns()
func (_Market *MarketSession) ReportDeploymemtOrder(_delpoymentOrderID *big.Int, _isViolatedSLA bool) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.ReportDeploymemtOrder(&_Market.TransactOpts, _delpoymentOrderID, _isViolatedSLA)
}

func (_Market *MarketSession) AsyncReportDeploymemtOrder(handler func(*types.Receipt, error), _delpoymentOrderID *big.Int, _isViolatedSLA bool) (*types.Transaction, error) {
	return _Market.Contract.AsyncReportDeploymemtOrder(handler, &_Market.TransactOpts, _delpoymentOrderID, _isViolatedSLA)
}

// ReportDeploymemtOrder is a paid mutator transaction binding the contract method 0x747a1ba2.
//
// Solidity: function reportDeploymemtOrder(uint256 _delpoymentOrderID, bool _isViolatedSLA) returns()
func (_Market *MarketTransactorSession) ReportDeploymemtOrder(_delpoymentOrderID *big.Int, _isViolatedSLA bool) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.ReportDeploymemtOrder(&_Market.TransactOpts, _delpoymentOrderID, _isViolatedSLA)
}

func (_Market *MarketTransactorSession) AsyncReportDeploymemtOrder(handler func(*types.Receipt, error), _delpoymentOrderID *big.Int, _isViolatedSLA bool) (*types.Transaction, error) {
	return _Market.Contract.AsyncReportDeploymemtOrder(handler, &_Market.TransactOpts, _delpoymentOrderID, _isViolatedSLA)
}

// SettleDeploymemtOrder is a paid mutator transaction binding the contract method 0x10664724.
//
// Solidity: function settleDeploymemtOrder(uint256 _deploymentOrderID) returns()
func (_Market *MarketTransactor) SettleDeploymemtOrder(opts *bind.TransactOpts, _deploymentOrderID *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Market.contract.Transact(opts, "settleDeploymemtOrder", _deploymentOrderID)
}

func (_Market *MarketTransactor) AsyncSettleDeploymemtOrder(handler func(*types.Receipt, error), opts *bind.TransactOpts, _deploymentOrderID *big.Int) (*types.Transaction, error) {
	return _Market.contract.AsyncTransact(opts, handler, "settleDeploymemtOrder", _deploymentOrderID)
}

// SettleDeploymemtOrder is a paid mutator transaction binding the contract method 0x10664724.
//
// Solidity: function settleDeploymemtOrder(uint256 _deploymentOrderID) returns()
func (_Market *MarketSession) SettleDeploymemtOrder(_deploymentOrderID *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.SettleDeploymemtOrder(&_Market.TransactOpts, _deploymentOrderID)
}

func (_Market *MarketSession) AsyncSettleDeploymemtOrder(handler func(*types.Receipt, error), _deploymentOrderID *big.Int) (*types.Transaction, error) {
	return _Market.Contract.AsyncSettleDeploymemtOrder(handler, &_Market.TransactOpts, _deploymentOrderID)
}

// SettleDeploymemtOrder is a paid mutator transaction binding the contract method 0x10664724.
//
// Solidity: function settleDeploymemtOrder(uint256 _deploymentOrderID) returns()
func (_Market *MarketTransactorSession) SettleDeploymemtOrder(_deploymentOrderID *big.Int) (*types.Transaction, *types.Receipt, error) {
	return _Market.Contract.SettleDeploymemtOrder(&_Market.TransactOpts, _deploymentOrderID)
}

func (_Market *MarketTransactorSession) AsyncSettleDeploymemtOrder(handler func(*types.Receipt, error), _deploymentOrderID *big.Int) (*types.Transaction, error) {
	return _Market.Contract.AsyncSettleDeploymemtOrder(handler, &_Market.TransactOpts, _deploymentOrderID)
}

// MarketAuctionEndEventIterator is returned from FilterAuctionEndEvent and is used to iterate over the raw logs and unpacked data for AuctionEndEvent events raised by the Market contract.
type MarketAuctionEndEventIterator struct {
	Event *MarketAuctionEndEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MarketAuctionEndEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MarketAuctionEndEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MarketAuctionEndEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MarketAuctionEndEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MarketAuctionEndEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MarketAuctionEndEvent represents a AuctionEndEvent event raised by the Market contract.
type MarketAuctionEndEvent struct {
	DeploymentOrderID *big.Int
	Success           bool
	Provider          common.Address
	UnitPrice         *big.Int
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterAuctionEndEvent is a free log retrieval operation binding the contract event 0x7621c01b83465196c05b7b0420b555f9b952da7a5168247b5dd4c006ea9be684.
//
// Solidity: event AuctionEndEvent(uint256 indexed _deploymentOrderID, bool _success, address _provider, uint256 _unitPrice)
func (_Market *MarketFilterer) FilterAuctionEndEvent(opts *bind.FilterOpts, _deploymentOrderID []*big.Int) (*MarketAuctionEndEventIterator, error) {

	var _deploymentOrderIDRule []interface{}
	for _, _deploymentOrderIDItem := range _deploymentOrderID {
		_deploymentOrderIDRule = append(_deploymentOrderIDRule, _deploymentOrderIDItem)
	}

	logs, sub, err := _Market.contract.FilterLogs(opts, "AuctionEndEvent", _deploymentOrderIDRule)
	if err != nil {
		return nil, err
	}
	return &MarketAuctionEndEventIterator{contract: _Market.contract, event: "AuctionEndEvent", logs: logs, sub: sub}, nil
}

// WatchAuctionEndEvent is a free log subscription operation binding the contract event 0x7621c01b83465196c05b7b0420b555f9b952da7a5168247b5dd4c006ea9be684.
//
// Solidity: event AuctionEndEvent(uint256 indexed _deploymentOrderID, bool _success, address _provider, uint256 _unitPrice)
func (_Market *MarketFilterer) WatchAuctionEndEvent(opts *bind.WatchOpts, sink chan<- *MarketAuctionEndEvent, _deploymentOrderID []*big.Int) (event.Subscription, error) {

	var _deploymentOrderIDRule []interface{}
	for _, _deploymentOrderIDItem := range _deploymentOrderID {
		_deploymentOrderIDRule = append(_deploymentOrderIDRule, _deploymentOrderIDItem)
	}

	logs, sub, err := _Market.contract.WatchLogs(opts, "AuctionEndEvent", _deploymentOrderIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MarketAuctionEndEvent)
				if err := _Market.contract.UnpackLog(event, "AuctionEndEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseAuctionEndEvent is a log parse operation binding the contract event 0x7621c01b83465196c05b7b0420b555f9b952da7a5168247b5dd4c006ea9be684.
//
// Solidity: event AuctionEndEvent(uint256 indexed _deploymentOrderID, bool _success, address _provider, uint256 _unitPrice)
func (_Market *MarketFilterer) ParseAuctionEndEvent(log types.Log) (*MarketAuctionEndEvent, error) {
	event := new(MarketAuctionEndEvent)
	if err := _Market.contract.UnpackLog(event, "AuctionEndEvent", log); err != nil {
		return nil, err
	}
	return event, nil
}

// MarketNewDeploymentOrderEventIterator is returned from FilterNewDeploymentOrderEvent and is used to iterate over the raw logs and unpacked data for NewDeploymentOrderEvent events raised by the Market contract.
type MarketNewDeploymentOrderEventIterator struct {
	Event *MarketNewDeploymentOrderEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MarketNewDeploymentOrderEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MarketNewDeploymentOrderEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MarketNewDeploymentOrderEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MarketNewDeploymentOrderEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MarketNewDeploymentOrderEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MarketNewDeploymentOrderEvent represents a NewDeploymentOrderEvent event raised by the Market contract.
type MarketNewDeploymentOrderEvent struct {
	DeploymentOrderID *big.Int
	AuctionAddress    common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterNewDeploymentOrderEvent is a free log retrieval operation binding the contract event 0xc756dae6c6da0abc4ce6343ee4a6a81c74f1dbbce1ce8a5ca3a765b53203c19f.
//
// Solidity: event NewDeploymentOrderEvent(uint256 indexed _deploymentOrderID, address _auctionAddress)
func (_Market *MarketFilterer) FilterNewDeploymentOrderEvent(opts *bind.FilterOpts, _deploymentOrderID []*big.Int) (*MarketNewDeploymentOrderEventIterator, error) {

	var _deploymentOrderIDRule []interface{}
	for _, _deploymentOrderIDItem := range _deploymentOrderID {
		_deploymentOrderIDRule = append(_deploymentOrderIDRule, _deploymentOrderIDItem)
	}

	logs, sub, err := _Market.contract.FilterLogs(opts, "NewDeploymentOrderEvent", _deploymentOrderIDRule)
	if err != nil {
		return nil, err
	}
	return &MarketNewDeploymentOrderEventIterator{contract: _Market.contract, event: "NewDeploymentOrderEvent", logs: logs, sub: sub}, nil
}

// WatchNewDeploymentOrderEvent is a free log subscription operation binding the contract event 0xc756dae6c6da0abc4ce6343ee4a6a81c74f1dbbce1ce8a5ca3a765b53203c19f.
//
// Solidity: event NewDeploymentOrderEvent(uint256 indexed _deploymentOrderID, address _auctionAddress)
func (_Market *MarketFilterer) WatchNewDeploymentOrderEvent(opts *bind.WatchOpts, sink chan<- *MarketNewDeploymentOrderEvent, _deploymentOrderID []*big.Int) (event.Subscription, error) {

	var _deploymentOrderIDRule []interface{}
	for _, _deploymentOrderIDItem := range _deploymentOrderID {
		_deploymentOrderIDRule = append(_deploymentOrderIDRule, _deploymentOrderIDItem)
	}

	logs, sub, err := _Market.contract.WatchLogs(opts, "NewDeploymentOrderEvent", _deploymentOrderIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MarketNewDeploymentOrderEvent)
				if err := _Market.contract.UnpackLog(event, "NewDeploymentOrderEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNewDeploymentOrderEvent is a log parse operation binding the contract event 0xc756dae6c6da0abc4ce6343ee4a6a81c74f1dbbce1ce8a5ca3a765b53203c19f.
//
// Solidity: event NewDeploymentOrderEvent(uint256 indexed _deploymentOrderID, address _auctionAddress)
func (_Market *MarketFilterer) ParseNewDeploymentOrderEvent(log types.Log) (*MarketNewDeploymentOrderEvent, error) {
	event := new(MarketNewDeploymentOrderEvent)
	if err := _Market.contract.UnpackLog(event, "NewDeploymentOrderEvent", log); err != nil {
		return nil, err
	}
	return event, nil
}

// MarketNewLeaseEventIterator is returned from FilterNewLeaseEvent and is used to iterate over the raw logs and unpacked data for NewLeaseEvent events raised by the Market contract.
type MarketNewLeaseEventIterator struct {
	Event *MarketNewLeaseEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *MarketNewLeaseEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(MarketNewLeaseEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(MarketNewLeaseEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *MarketNewLeaseEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *MarketNewLeaseEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// MarketNewLeaseEvent represents a NewLeaseEvent event raised by the Market contract.
type MarketNewLeaseEvent struct {
	DeploymentOrderID *big.Int
	Customer          common.Address
	Provider          common.Address
	Raw               types.Log // Blockchain specific contextual infos
}

// FilterNewLeaseEvent is a free log retrieval operation binding the contract event 0xb7b56d611111b49690d934a0d72e2b472f4d78a8863f7da8c84e8381e894b2f8.
//
// Solidity: event NewLeaseEvent(uint256 indexed _deploymentOrderID, address _customer, address _provider)
func (_Market *MarketFilterer) FilterNewLeaseEvent(opts *bind.FilterOpts, _deploymentOrderID []*big.Int) (*MarketNewLeaseEventIterator, error) {

	var _deploymentOrderIDRule []interface{}
	for _, _deploymentOrderIDItem := range _deploymentOrderID {
		_deploymentOrderIDRule = append(_deploymentOrderIDRule, _deploymentOrderIDItem)
	}

	logs, sub, err := _Market.contract.FilterLogs(opts, "NewLeaseEvent", _deploymentOrderIDRule)
	if err != nil {
		return nil, err
	}
	return &MarketNewLeaseEventIterator{contract: _Market.contract, event: "NewLeaseEvent", logs: logs, sub: sub}, nil
}

// WatchNewLeaseEvent is a free log subscription operation binding the contract event 0xb7b56d611111b49690d934a0d72e2b472f4d78a8863f7da8c84e8381e894b2f8.
//
// Solidity: event NewLeaseEvent(uint256 indexed _deploymentOrderID, address _customer, address _provider)
func (_Market *MarketFilterer) WatchNewLeaseEvent(opts *bind.WatchOpts, sink chan<- *MarketNewLeaseEvent, _deploymentOrderID []*big.Int) (event.Subscription, error) {

	var _deploymentOrderIDRule []interface{}
	for _, _deploymentOrderIDItem := range _deploymentOrderID {
		_deploymentOrderIDRule = append(_deploymentOrderIDRule, _deploymentOrderIDItem)
	}

	logs, sub, err := _Market.contract.WatchLogs(opts, "NewLeaseEvent", _deploymentOrderIDRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(MarketNewLeaseEvent)
				if err := _Market.contract.UnpackLog(event, "NewLeaseEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseNewLeaseEvent is a log parse operation binding the contract event 0xb7b56d611111b49690d934a0d72e2b472f4d78a8863f7da8c84e8381e894b2f8.
//
// Solidity: event NewLeaseEvent(uint256 indexed _deploymentOrderID, address _customer, address _provider)
func (_Market *MarketFilterer) ParseNewLeaseEvent(log types.Log) (*MarketNewLeaseEvent, error) {
	event := new(MarketNewLeaseEvent)
	if err := _Market.contract.UnpackLog(event, "NewLeaseEvent", log); err != nil {
		return nil, err
	}
	return event, nil
}
