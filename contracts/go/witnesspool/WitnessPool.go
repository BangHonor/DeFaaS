// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package witnesspool

import (
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// WitnessPoolABI is the input ABI used to generate the binding from.
const WitnessPoolABI = "[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenContractAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_witness\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_slaID\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_monitoringBeginTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_monitoringDuration\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_funcToMonitor\",\"type\":\"string\"}],\"name\":\"WitnessSelectedEvent\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"fineNoviolationReport\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fineViolationSilence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slaID\",\"type\":\"uint256\"},{\"internalType\":\"enumWitnessPool.SLAStates\",\"name\":\"_state\",\"type\":\"uint8\"}],\"name\":\"isAtSLAState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_witness\",\"type\":\"address\"},{\"internalType\":\"enumWitnessManagement.WStates\",\"name\":\"_state\",\"type\":\"uint8\"}],\"name\":\"isAtWState\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slaID\",\"type\":\"uint256\"}],\"name\":\"isViolatedSLA\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slaID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_witness\",\"type\":\"address\"}],\"name\":\"isWitnessCommitteeMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_witness\",\"type\":\"address\"}],\"name\":\"isWitnessQualified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_witness\",\"type\":\"address\"}],\"name\":\"isWitnessRegistered\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_curBlockNum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_provider\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_customer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_slaID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_funcToMonitor\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_monitoringDuration\",\"type\":\"uint256\"}],\"name\":\"newSLA\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_slaID\",\"type\":\"uint256\"}],\"name\":\"reportViolation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"reputationDishonestReduced\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardNoviolationSilence\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardViolationReport\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stdNumReportRequired\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stdNumWitness\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stdWitnessDepoist\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stdblockNeed\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenContract\",\"outputs\":[{\"internalType\":\"contractFaaSToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wintessTurnOn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"witenessLogout\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"witnessDrawReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"witnessLogin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"witnessReputationInit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"witnessReputationQualified\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"witnessTurnOff\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}]"

// WitnessPoolBin is the compiled bytecode used for deploying new contracts.
var WitnessPoolBin = "0x6080604052600a6009556000600a556001600b556001600c556001600d556003600e556002600f5560026010553480156200003957600080fd5b50604051620039d9380380620039d983398181016040528101906200005f919062000122565b8080336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505060006007819055506064600281905550600a600381905550600160048190555050506200019c565b6000815190506200011c8162000182565b92915050565b6000602082840312156200013557600080fd5b600062000145848285016200010b565b91505092915050565b60006200015b8262000162565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200018d816200014e565b81146200019957600080fd5b50565b61382d80620001ac6000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c8063a35da30c116100de578063e0a5a2aa11610097578063ecc7e64b11610071578063ecc7e64b1461042f578063ed06256714610439578063f11ad7f014610469578063fc634e8f146104875761018e565b8063e0a5a2aa146103d7578063e81bc992146103f5578063ebe47110146104255761018e565b8063a35da30c146102ef578063b65f67061461030d578063cc83c03414610329578063cda2886414610347578063cf61776214610377578063d446fcdd146103a75761018e565b8063744c2e331161014b57806389640b581161012557806389640b581461028b57806389be6f46146102a95780638da5cb5b146102c75780639faa79e3146102e55761018e565b8063744c2e3314610231578063746ea9c61461024f5780637af6fc2a1461026d5761018e565b806316c3734d146101935780632fba9d1a146101b15780633f5307c4146101bb578063426f93b1146101d957806347ff3aba146101e357806355a373d614610213575b600080fd5b61019b6104a3565b6040516101a89190612eb9565b60405180910390f35b6101b96104a9565b005b6101c361074c565b6040516101d09190612eb9565b60405180910390f35b6101e1610752565b005b6101fd60048036038101906101f891906127cd565b610a5c565b60405161020a9190612ca3565b60405180910390f35b61021b610b28565b6040516102289190612cbe565b60405180910390f35b610239610b4e565b6040516102469190612eb9565b60405180910390f35b610257610b54565b6040516102649190612eb9565b60405180910390f35b610275610b5a565b6040516102829190612eb9565b60405180910390f35b610293610b60565b6040516102a09190612eb9565b60405180910390f35b6102b1610b66565b6040516102be9190612eb9565b60405180910390f35b6102cf610b6c565b6040516102dc9190612c28565b60405180910390f35b6102ed610b90565b005b6102f7610e95565b6040516103049190612eb9565b60405180910390f35b61032760048036038101906103229190612897565b610e9b565b005b6103316111ef565b60405161033e9190612eb9565b60405180910390f35b610361600480360381019061035c9190612938565b6111f5565b60405161036e9190612ca3565b60405180910390f35b610391600480360381019061038c91906127a4565b611295565b60405161039e9190612ca3565b60405180910390f35b6103c160048036038101906103bc91906127a4565b611335565b6040516103ce9190612ca3565b60405180910390f35b6103df61138e565b6040516103ec9190612eb9565b60405180910390f35b61040f600480360381019061040a9190612832565b611394565b60405161041c9190612ca3565b60405180910390f35b61042d611588565b005b610437611726565b005b610453600480360381019061044e919061285b565b611874565b6040516104609190612ca3565b60405180910390f35b6104716118e9565b60405161047e9190612eb9565b60405180910390f35b6104a1600480360381019061049c9190612832565b6118ef565b005b60035481565b600015156104b633611335565b1515146104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104ef90612db9565b60405180910390fd5b6001151561050533611295565b151514610547576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161053e90612cf9565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040154116105cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c390612e39565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206004015490506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016106b8929190612c7a565b602060405180830381600087803b1580156106d257600080fd5b505af11580156106e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061070a9190612809565b610749576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161074090612df9565b60405180910390fd5b50565b600e5481565b6001151561075f33611335565b1515146107a1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161079890612d39565b60405180910390fd5b600115156107ae33611295565b1515146107f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e790612cf9565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015490506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff021916908360038111156108c3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055506000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060030181905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016109c8929190612c7a565b602060405180830381600087803b1580156109e257600080fd5b505af11580156109f6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1a9190612809565b610a59576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5090612e79565b60405180910390fd5b50565b6000816003811115610a97577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff166003811115610b1f577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14905092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600c5481565b600f5481565b600b5481565b60045481565b600d5481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60001515610b9d33611335565b151514610bdf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bd690612db9565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd33306002546040518463ffffffff1660e01b8152600401610c4093929190612c43565b602060405180830381600087803b158015610c5a57600080fd5b505af1158015610c6e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c929190612809565b610cd1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cc890612e99565b60405180910390fd5b6006339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040518060c0016040528060006003811115610d79577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b81526020016001151581526020016001600680549050610d999190613073565b8152602001600354815260200160025481526020016000815250600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008201518160000160006101000a81548160ff02191690836003811115610e43577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060208201518160000160016101000a81548160ff02191690831515021790555060408201518160010155606082015181600201556080820151816003015560a08201518160040155905050565b60025481565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610f29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2090612cd9565b60405180910390fd5b6000610f3c600e54886010548989611b63565b9050600060086000868152602001908152602001600020905060018160000160006101000a81548160ff02191690836002811115610fa3577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060018160000160016101000a81548160ff02191690831515021790555060008160000160026101000a81548160ff02191690831515021790555083816001019080519060200190610ffa9291906125a6565b50603c426110089190612f92565b8160020181905550828160030181905550600f5481600401819055508181600501908051906020019061103c92919061262c565b5060005b81600501805490508110156111e457600082600501828154811061108d577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060018360060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690831515021790555060008360060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff0219169083151502179055508073ffffffffffffffffffffffffffffffffffffffff167fb75dc87e2f9d1c0a563b98a1148d3f71d4137a45be4148a6a35a0b045a3c910188856002015486600301548a6040516111c89493929190612ed4565b60405180910390a25080806111dc906131ec565b915050611040565b505050505050505050565b600a5481565b6000816002811115611230577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b6008600085815260200190815260200160002060000160009054906101000a900460ff16600281111561128c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14905092915050565b6000600454600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600201541015801561132e57506001600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015410155b9050919050565b6000600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff169050919050565b60105481565b6000816113a081611ede565b6113df576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d690612d59565b60405180910390fd5b82600060086000838152602001908152602001600020905060016002811115611431577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8160000160009054906101000a900460ff16600281111561147b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b14801561149a5750806003015481600201546114979190612f92565b42115b15611505576114a882611f12565b6114b182612444565b60028160000160006101000a81548160ff021916908360028111156114ff577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055505b8460026001151561151683836111f5565b151514611558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161154f90612d79565b60405180910390fd5b6008600088815260200190815260200160002060000160029054906101000a900460ff1695505050505050919050565b6001151561159533611335565b1515146115d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016115ce90612d39565b60405180910390fd5b600115156115e433611295565b151514611626576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161161d90612cf9565b60405180910390fd5b336000600115156116378383610a5c565b151514611679576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161167090612d79565b60405180910390fd5b6001600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115611705577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506007600081548092919061171d906131ec565b91905055505050565b6001151561173333611335565b151514611775576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161176c90612d39565b60405180910390fd5b3360018015156117858383610a5c565b1515146117c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117be90612d79565b60405180910390fd5b6000600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115611853577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b02179055506007600081548092919061186b9061315f565b91905055505050565b6000600115156008600085815260200190815260200160002060060160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900460ff16151514905092915050565b60095481565b600115156118fc33611335565b15151461193e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161193590612d39565b60405180910390fd5b6001151561194b33611295565b15151461198d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198490612cf9565b60405180910390fd5b8061199781611ede565b6119d6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119cd90612d59565b60405180910390fd5b816119e18133611874565b611a20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a1790612dd9565b60405180910390fd5b826001801515611a3083836111f5565b151514611a72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611a6990612d79565b60405180910390fd5b8460086000828152602001908152602001600020600301546008600083815260200190815260200160002060020154611aab9190612f92565b4210611aec576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611ae390612d19565b60405180910390fd5b60016008600088815260200190815260200160002060060160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160016101000a81548160ff021916908315150217905550505050505050565b60608086600a611b739190613019565b60075411611bb6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611bad90612e59565b60405180910390fd5b6000856104008843611bc89190613073565b611bd29190612fe8565b43611bdd9190613073565b611be79190613073565b905060ff81611bf69190612f92565b4310611c37576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c2e90612e19565b60405180910390fd5b8581611c439190612f92565b4311611c84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7b90612d99565b60405180910390fd5b6000805b87811015611ccc5760018184611c9e9190612f92565b611ca89190612f92565b4060001c82611cb79190612f92565b91508080611cc4906131ec565b915050611c88565b5060005b89811015611ece5760006006808054905084611cec919061323f565b81548110611d23577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050611d5b816001610a5c565b8015611d6c5750611d6b81611295565b5b8015611da457508773ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b8015611ddc57508673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b15611e99576003600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115611e6d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060076000815480929190611e859061315f565b91905055508180611e95906131ec565b9250505b8260001b604051602001611ead9190612c0d565b6040516020818303038152906040528051906020012060001c925050611cd0565b8394505050505095945050505050565b6000600115156008600084815260200190815260200160002060000160019054906101000a900460ff161515149050919050565b806001801515611f2283836111f5565b151514611f64576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f5b90612d79565b60405180910390fd5b60006008600085815260200190815260200160002090506000805b826005018054905081101561207a576000836005018281548110611fcc577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600115158460060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff1615151415612066578280612062906131ec565b9350505b508080612072906131ec565b915050611f7f565b50816004015481118260000160026101000a81548160ff02191690831515021790555060005b826005018054905081101561243c5760008360050182815481106120ed577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600115158460000160029054906101000a900460ff16151514156122b257600115158460060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16151514156121f657600954600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008282546121ea9190612f92565b925050819055506122ad565b600a54600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301600082825461224a9190613073565b92505081905550600d54600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546122a59190613073565b925050819055505b612428565b600115158460060160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160019054906101000a900460ff16151514156123cb57600b54600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060040160008282546123649190613073565b92505081905550600d54600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282546123bf9190613073565b92505081905550612427565b600c54600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600401600082825461241f9190612f92565b925050819055505b5b508080612434906131ec565b9150506120a0565b505050505050565b60005b60086000838152602001908152602001600020600501805490508110156125a25760006008600084815260200190815260200160002060050182815481106124b8577f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506001600560008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160006101000a81548160ff02191690836003811115612571577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b021790555060076000815480929190612589906131ec565b919050555050808061259a906131ec565b915050612447565b5050565b8280546125b290613189565b90600052602060002090601f0160209004810192826125d4576000855561261b565b82601f106125ed57805160ff191683800117855561261b565b8280016001018555821561261b579182015b8281111561261a5782518255916020019190600101906125ff565b5b50905061262891906126b6565b5090565b8280548282559060005260206000209081019282156126a5579160200282015b828111156126a45782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055509160200191906001019061264c565b5b5090506126b291906126b6565b5090565b5b808211156126cf5760008160009055506001016126b7565b5090565b60006126e66126e184612f45565b612f20565b9050828152602081018484840111156126fe57600080fd5b61270984828561311d565b509392505050565b60008135905061272081613792565b92915050565b600081519050612735816137a9565b92915050565b60008135905061274a816137c0565b92915050565b60008135905061275f816137d0565b92915050565b600082601f83011261277657600080fd5b81356127868482602086016126d3565b91505092915050565b60008135905061279e816137e0565b92915050565b6000602082840312156127b657600080fd5b60006127c484828501612711565b91505092915050565b600080604083850312156127e057600080fd5b60006127ee85828601612711565b92505060206127ff85828601612750565b9150509250929050565b60006020828403121561281b57600080fd5b600061282984828501612726565b91505092915050565b60006020828403121561284457600080fd5b60006128528482850161278f565b91505092915050565b6000806040838503121561286e57600080fd5b600061287c8582860161278f565b925050602061288d85828601612711565b9150509250929050565b60008060008060008060c087890312156128b057600080fd5b60006128be89828a0161278f565b96505060206128cf89828a01612711565b95505060406128e089828a01612711565b94505060606128f189828a0161278f565b935050608087013567ffffffffffffffff81111561290e57600080fd5b61291a89828a01612765565b92505060a061292b89828a0161278f565b9150509295509295509295565b6000806040838503121561294b57600080fd5b60006129598582860161278f565b925050602061296a8582860161273b565b9150509250929050565b61297d816130a7565b82525050565b61298c816130b9565b82525050565b6129a361299e826130c5565b613235565b82525050565b6129b2816130f9565b82525050565b60006129c382612f76565b6129cd8185612f81565b93506129dd81856020860161312c565b6129e68161332c565b840191505092915050565b60006129fe601983612f81565b9150612a098261333d565b602082019050919050565b6000612a21602783612f81565b9150612a2c82613366565b604082019050919050565b6000612a44602583612f81565b9150612a4f826133b5565b604082019050919050565b6000612a67603083612f81565b9150612a7282613404565b604082019050919050565b6000612a8a601883612f81565b9150612a9582613453565b602082019050919050565b6000612aad603483612f81565b9150612ab88261347c565b604082019050919050565b6000612ad0603083612f81565b9150612adb826134cb565b604082019050919050565b6000612af3602c83612f81565b9150612afe8261351a565b604082019050919050565b6000612b16603383612f81565b9150612b2182613569565b604082019050919050565b6000612b39602e83612f81565b9150612b44826135b8565b604082019050919050565b6000612b5c603c83612f81565b9150612b6782613607565b604082019050919050565b6000612b7f602a83612f81565b9150612b8a82613656565b604082019050919050565b6000612ba2602783612f81565b9150612bad826136a5565b604082019050919050565b6000612bc5603183612f81565b9150612bd0826136f4565b604082019050919050565b6000612be8602b83612f81565b9150612bf382613743565b604082019050919050565b612c07816130ef565b82525050565b6000612c198284612992565b60208201915081905092915050565b6000602082019050612c3d6000830184612974565b92915050565b6000606082019050612c586000830186612974565b612c656020830185612974565b612c726040830184612bfe565b949350505050565b6000604082019050612c8f6000830185612974565b612c9c6020830184612bfe565b9392505050565b6000602082019050612cb86000830184612983565b92915050565b6000602082019050612cd360008301846129a9565b92915050565b60006020820190508181036000830152612cf2816129f1565b9050919050565b60006020820190508181036000830152612d1281612a14565b9050919050565b60006020820190508181036000830152612d3281612a37565b9050919050565b60006020820190508181036000830152612d5281612a5a565b9050919050565b60006020820190508181036000830152612d7281612a7d565b9050919050565b60006020820190508181036000830152612d9281612aa0565b9050919050565b60006020820190508181036000830152612db281612ac3565b9050919050565b60006020820190508181036000830152612dd281612ae6565b9050919050565b60006020820190508181036000830152612df281612b09565b9050919050565b60006020820190508181036000830152612e1281612b2c565b9050919050565b60006020820190508181036000830152612e3281612b4f565b9050919050565b60006020820190508181036000830152612e5281612b72565b9050919050565b60006020820190508181036000830152612e7281612b95565b9050919050565b60006020820190508181036000830152612e9281612bb8565b9050919050565b60006020820190508181036000830152612eb281612bdb565b9050919050565b6000602082019050612ece6000830184612bfe565b92915050565b6000608082019050612ee96000830187612bfe565b612ef66020830186612bfe565b612f036040830185612bfe565b8181036060830152612f1581846129b8565b905095945050505050565b6000612f2a612f3b565b9050612f3682826131bb565b919050565b6000604051905090565b600067ffffffffffffffff821115612f6057612f5f6132fd565b5b612f698261332c565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b6000612f9d826130ef565b9150612fa8836130ef565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115612fdd57612fdc613270565b5b828201905092915050565b6000612ff3826130ef565b9150612ffe836130ef565b92508261300e5761300d61329f565b5b828204905092915050565b6000613024826130ef565b915061302f836130ef565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048311821515161561306857613067613270565b5b828202905092915050565b600061307e826130ef565b9150613089836130ef565b92508282101561309c5761309b613270565b5b828203905092915050565b60006130b2826130cf565b9050919050565b60008115159050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006131048261310b565b9050919050565b6000613116826130cf565b9050919050565b82818337600083830152505050565b60005b8381101561314a57808201518184015260208101905061312f565b83811115613159576000848401525b50505050565b600061316a826130ef565b9150600082141561317e5761317d613270565b5b600182039050919050565b600060028204905060018216806131a157607f821691505b602082108114156131b5576131b46132ce565b5b50919050565b6131c48261332c565b810181811067ffffffffffffffff821117156131e3576131e26132fd565b5b80604052505050565b60006131f7826130ef565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561322a57613229613270565b5b600182019050919050565b6000819050919050565b600061324a826130ef565b9150613255836130ef565b9250826132655761326461329f565b5b828206905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f6e6c79206f776e65722063616e2063616c6c20746869732e00000000000000600082015250565b7f5769746e657373506f6f6c3a20746865207769746e65737320697320756e717560008201527f616c696669656400000000000000000000000000000000000000000000000000602082015250565b7f5769746e657373506f6f6c3a206d6f6e69746f72696e672074696d652065786360008201527f6565646564000000000000000000000000000000000000000000000000000000602082015250565b7f5769746e657373506f6f6c3a20746865206164647265737320686164206e6f7460008201527f206265656e207265676973746572656400000000000000000000000000000000602082015250565b7f5769746e657373506f6f6c3a20696e76616c696420736c610000000000000000600082015250565b7f576974656e7373506f6f6c3a2066756e6374696f6e2063616e6e6f742062652060008201527f63616c6c65642061742074686973207374617465000000000000000000000000602082015250565b7f57696e746e657373506f6f6c3a206e6f206d6f726520626c6f636b4e6565642060008201527f626c6f636b732067656e65726174656400000000000000000000000000000000602082015250565b7f5769746e657373506f6f6c3a207468652061646472657373206861642062656560008201527f6e20726567697374657265640000000000000000000000000000000000000000602082015250565b7f5769746e657373506f6f6c3a20746865207769746e657373206973206e6f742060008201527f6120636f6d6d6974746565206d656d6265722000000000000000000000000000602082015250565b7f5769746e657373506f6f6c3a206661696c656420746f2064726177207468652060008201527f7769746e65737320726577617264000000000000000000000000000000000000602082015250565b7f5769746e657373506f6f6c3a20626c6f636b686173682063616e206f6e6c792060008201527f62652061636365737365642077697468696e2032353520646570746800000000602082015250565b7f5769746e657373506f6f6c3a2074686520726577617264206f66207769746e6560008201527f7373206973207a65726f00000000000000000000000000000000000000000000602082015250565b7f57696e746e657373506f6f6c3a206e6f7420656e6f756768206f6e6c696e652060008201527f7769746e65737300000000000000000000000000000000000000000000000000602082015250565b7f5769746e657373506f6f6c3a206661696c656420746f20726566756e6420746860008201527f65207769746e657373206465706f736974000000000000000000000000000000602082015250565b7f5769746e657373506f6f6c3a206661696c656420746f206c6f636b207769746e60008201527f657373206465706f697374000000000000000000000000000000000000000000602082015250565b61379b816130a7565b81146137a657600080fd5b50565b6137b2816130b9565b81146137bd57600080fd5b50565b600381106137cd57600080fd5b50565b600481106137dd57600080fd5b50565b6137e9816130ef565b81146137f457600080fd5b5056fea26469706673582212205aa6e71a4a05aa732a5f5a51abf01583b384f73441bcaf75d8836d8a188806c164736f6c63430008010033"

// DeployWitnessPool deploys a new Ethereum contract, binding an instance of WitnessPool to it.
func DeployWitnessPool(auth *bind.TransactOpts, backend bind.ContractBackend, _tokenContractAddress common.Address) (common.Address, *types.Transaction, *WitnessPool, error) {
	parsed, err := abi.JSON(strings.NewReader(WitnessPoolABI))
	if err != nil {
		return common.Address{}, nil, nil, err
	}

	address, tx, contract, err := bind.DeployContract(auth, parsed, common.FromHex(WitnessPoolBin), backend, _tokenContractAddress)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &WitnessPool{WitnessPoolCaller: WitnessPoolCaller{contract: contract}, WitnessPoolTransactor: WitnessPoolTransactor{contract: contract}, WitnessPoolFilterer: WitnessPoolFilterer{contract: contract}}, nil
}

// WitnessPool is an auto generated Go binding around an Ethereum contract.
type WitnessPool struct {
	WitnessPoolCaller     // Read-only binding to the contract
	WitnessPoolTransactor // Write-only binding to the contract
	WitnessPoolFilterer   // Log filterer for contract events
}

// WitnessPoolCaller is an auto generated read-only Go binding around an Ethereum contract.
type WitnessPoolCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// WitnessPoolTransactor is an auto generated write-only Go binding around an Ethereum contract.
type WitnessPoolTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// WitnessPoolFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type WitnessPoolFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// WitnessPoolSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type WitnessPoolSession struct {
	Contract     *WitnessPool      // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// WitnessPoolCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type WitnessPoolCallerSession struct {
	Contract *WitnessPoolCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts      // Call options to use throughout this session
}

// WitnessPoolTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type WitnessPoolTransactorSession struct {
	Contract     *WitnessPoolTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts      // Transaction auth options to use throughout this session
}

// WitnessPoolRaw is an auto generated low-level Go binding around an Ethereum contract.
type WitnessPoolRaw struct {
	Contract *WitnessPool // Generic contract binding to access the raw methods on
}

// WitnessPoolCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type WitnessPoolCallerRaw struct {
	Contract *WitnessPoolCaller // Generic read-only contract binding to access the raw methods on
}

// WitnessPoolTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type WitnessPoolTransactorRaw struct {
	Contract *WitnessPoolTransactor // Generic write-only contract binding to access the raw methods on
}

// NewWitnessPool creates a new instance of WitnessPool, bound to a specific deployed contract.
func NewWitnessPool(address common.Address, backend bind.ContractBackend) (*WitnessPool, error) {
	contract, err := bindWitnessPool(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &WitnessPool{WitnessPoolCaller: WitnessPoolCaller{contract: contract}, WitnessPoolTransactor: WitnessPoolTransactor{contract: contract}, WitnessPoolFilterer: WitnessPoolFilterer{contract: contract}}, nil
}

// NewWitnessPoolCaller creates a new read-only instance of WitnessPool, bound to a specific deployed contract.
func NewWitnessPoolCaller(address common.Address, caller bind.ContractCaller) (*WitnessPoolCaller, error) {
	contract, err := bindWitnessPool(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &WitnessPoolCaller{contract: contract}, nil
}

// NewWitnessPoolTransactor creates a new write-only instance of WitnessPool, bound to a specific deployed contract.
func NewWitnessPoolTransactor(address common.Address, transactor bind.ContractTransactor) (*WitnessPoolTransactor, error) {
	contract, err := bindWitnessPool(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &WitnessPoolTransactor{contract: contract}, nil
}

// NewWitnessPoolFilterer creates a new log filterer instance of WitnessPool, bound to a specific deployed contract.
func NewWitnessPoolFilterer(address common.Address, filterer bind.ContractFilterer) (*WitnessPoolFilterer, error) {
	contract, err := bindWitnessPool(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &WitnessPoolFilterer{contract: contract}, nil
}

// bindWitnessPool binds a generic wrapper to an already deployed contract.
func bindWitnessPool(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(WitnessPoolABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_WitnessPool *WitnessPoolRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _WitnessPool.Contract.WitnessPoolCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_WitnessPool *WitnessPoolRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WitnessPool.Contract.WitnessPoolTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_WitnessPool *WitnessPoolRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _WitnessPool.Contract.WitnessPoolTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_WitnessPool *WitnessPoolCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _WitnessPool.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_WitnessPool *WitnessPoolTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WitnessPool.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_WitnessPool *WitnessPoolTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _WitnessPool.Contract.contract.Transact(opts, method, params...)
}

// FineNoviolationReport is a free data retrieval call binding the contract method 0x7af6fc2a.
//
// Solidity: function fineNoviolationReport() view returns(uint256)
func (_WitnessPool *WitnessPoolCaller) FineNoviolationReport(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "fineNoviolationReport")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// FineNoviolationReport is a free data retrieval call binding the contract method 0x7af6fc2a.
//
// Solidity: function fineNoviolationReport() view returns(uint256)
func (_WitnessPool *WitnessPoolSession) FineNoviolationReport() (*big.Int, error) {
	return _WitnessPool.Contract.FineNoviolationReport(&_WitnessPool.CallOpts)
}

// FineNoviolationReport is a free data retrieval call binding the contract method 0x7af6fc2a.
//
// Solidity: function fineNoviolationReport() view returns(uint256)
func (_WitnessPool *WitnessPoolCallerSession) FineNoviolationReport() (*big.Int, error) {
	return _WitnessPool.Contract.FineNoviolationReport(&_WitnessPool.CallOpts)
}

// FineViolationSilence is a free data retrieval call binding the contract method 0xcc83c034.
//
// Solidity: function fineViolationSilence() view returns(uint256)
func (_WitnessPool *WitnessPoolCaller) FineViolationSilence(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "fineViolationSilence")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// FineViolationSilence is a free data retrieval call binding the contract method 0xcc83c034.
//
// Solidity: function fineViolationSilence() view returns(uint256)
func (_WitnessPool *WitnessPoolSession) FineViolationSilence() (*big.Int, error) {
	return _WitnessPool.Contract.FineViolationSilence(&_WitnessPool.CallOpts)
}

// FineViolationSilence is a free data retrieval call binding the contract method 0xcc83c034.
//
// Solidity: function fineViolationSilence() view returns(uint256)
func (_WitnessPool *WitnessPoolCallerSession) FineViolationSilence() (*big.Int, error) {
	return _WitnessPool.Contract.FineViolationSilence(&_WitnessPool.CallOpts)
}

// IsAtSLAState is a free data retrieval call binding the contract method 0xcda28864.
//
// Solidity: function isAtSLAState(uint256 _slaID, uint8 _state) view returns(bool)
func (_WitnessPool *WitnessPoolCaller) IsAtSLAState(opts *bind.CallOpts, _slaID *big.Int, _state uint8) (bool, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "isAtSLAState", _slaID, _state)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsAtSLAState is a free data retrieval call binding the contract method 0xcda28864.
//
// Solidity: function isAtSLAState(uint256 _slaID, uint8 _state) view returns(bool)
func (_WitnessPool *WitnessPoolSession) IsAtSLAState(_slaID *big.Int, _state uint8) (bool, error) {
	return _WitnessPool.Contract.IsAtSLAState(&_WitnessPool.CallOpts, _slaID, _state)
}

// IsAtSLAState is a free data retrieval call binding the contract method 0xcda28864.
//
// Solidity: function isAtSLAState(uint256 _slaID, uint8 _state) view returns(bool)
func (_WitnessPool *WitnessPoolCallerSession) IsAtSLAState(_slaID *big.Int, _state uint8) (bool, error) {
	return _WitnessPool.Contract.IsAtSLAState(&_WitnessPool.CallOpts, _slaID, _state)
}

// IsAtWState is a free data retrieval call binding the contract method 0x47ff3aba.
//
// Solidity: function isAtWState(address _witness, uint8 _state) view returns(bool)
func (_WitnessPool *WitnessPoolCaller) IsAtWState(opts *bind.CallOpts, _witness common.Address, _state uint8) (bool, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "isAtWState", _witness, _state)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsAtWState is a free data retrieval call binding the contract method 0x47ff3aba.
//
// Solidity: function isAtWState(address _witness, uint8 _state) view returns(bool)
func (_WitnessPool *WitnessPoolSession) IsAtWState(_witness common.Address, _state uint8) (bool, error) {
	return _WitnessPool.Contract.IsAtWState(&_WitnessPool.CallOpts, _witness, _state)
}

// IsAtWState is a free data retrieval call binding the contract method 0x47ff3aba.
//
// Solidity: function isAtWState(address _witness, uint8 _state) view returns(bool)
func (_WitnessPool *WitnessPoolCallerSession) IsAtWState(_witness common.Address, _state uint8) (bool, error) {
	return _WitnessPool.Contract.IsAtWState(&_WitnessPool.CallOpts, _witness, _state)
}

// IsWitnessCommitteeMember is a free data retrieval call binding the contract method 0xed062567.
//
// Solidity: function isWitnessCommitteeMember(uint256 _slaID, address _witness) view returns(bool)
func (_WitnessPool *WitnessPoolCaller) IsWitnessCommitteeMember(opts *bind.CallOpts, _slaID *big.Int, _witness common.Address) (bool, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "isWitnessCommitteeMember", _slaID, _witness)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsWitnessCommitteeMember is a free data retrieval call binding the contract method 0xed062567.
//
// Solidity: function isWitnessCommitteeMember(uint256 _slaID, address _witness) view returns(bool)
func (_WitnessPool *WitnessPoolSession) IsWitnessCommitteeMember(_slaID *big.Int, _witness common.Address) (bool, error) {
	return _WitnessPool.Contract.IsWitnessCommitteeMember(&_WitnessPool.CallOpts, _slaID, _witness)
}

// IsWitnessCommitteeMember is a free data retrieval call binding the contract method 0xed062567.
//
// Solidity: function isWitnessCommitteeMember(uint256 _slaID, address _witness) view returns(bool)
func (_WitnessPool *WitnessPoolCallerSession) IsWitnessCommitteeMember(_slaID *big.Int, _witness common.Address) (bool, error) {
	return _WitnessPool.Contract.IsWitnessCommitteeMember(&_WitnessPool.CallOpts, _slaID, _witness)
}

// IsWitnessQualified is a free data retrieval call binding the contract method 0xcf617762.
//
// Solidity: function isWitnessQualified(address _witness) view returns(bool)
func (_WitnessPool *WitnessPoolCaller) IsWitnessQualified(opts *bind.CallOpts, _witness common.Address) (bool, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "isWitnessQualified", _witness)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsWitnessQualified is a free data retrieval call binding the contract method 0xcf617762.
//
// Solidity: function isWitnessQualified(address _witness) view returns(bool)
func (_WitnessPool *WitnessPoolSession) IsWitnessQualified(_witness common.Address) (bool, error) {
	return _WitnessPool.Contract.IsWitnessQualified(&_WitnessPool.CallOpts, _witness)
}

// IsWitnessQualified is a free data retrieval call binding the contract method 0xcf617762.
//
// Solidity: function isWitnessQualified(address _witness) view returns(bool)
func (_WitnessPool *WitnessPoolCallerSession) IsWitnessQualified(_witness common.Address) (bool, error) {
	return _WitnessPool.Contract.IsWitnessQualified(&_WitnessPool.CallOpts, _witness)
}

// IsWitnessRegistered is a free data retrieval call binding the contract method 0xd446fcdd.
//
// Solidity: function isWitnessRegistered(address _witness) view returns(bool)
func (_WitnessPool *WitnessPoolCaller) IsWitnessRegistered(opts *bind.CallOpts, _witness common.Address) (bool, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "isWitnessRegistered", _witness)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsWitnessRegistered is a free data retrieval call binding the contract method 0xd446fcdd.
//
// Solidity: function isWitnessRegistered(address _witness) view returns(bool)
func (_WitnessPool *WitnessPoolSession) IsWitnessRegistered(_witness common.Address) (bool, error) {
	return _WitnessPool.Contract.IsWitnessRegistered(&_WitnessPool.CallOpts, _witness)
}

// IsWitnessRegistered is a free data retrieval call binding the contract method 0xd446fcdd.
//
// Solidity: function isWitnessRegistered(address _witness) view returns(bool)
func (_WitnessPool *WitnessPoolCallerSession) IsWitnessRegistered(_witness common.Address) (bool, error) {
	return _WitnessPool.Contract.IsWitnessRegistered(&_WitnessPool.CallOpts, _witness)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_WitnessPool *WitnessPoolCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_WitnessPool *WitnessPoolSession) Owner() (common.Address, error) {
	return _WitnessPool.Contract.Owner(&_WitnessPool.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_WitnessPool *WitnessPoolCallerSession) Owner() (common.Address, error) {
	return _WitnessPool.Contract.Owner(&_WitnessPool.CallOpts)
}

// ReputationDishonestReduced is a free data retrieval call binding the contract method 0x89be6f46.
//
// Solidity: function reputationDishonestReduced() view returns(uint256)
func (_WitnessPool *WitnessPoolCaller) ReputationDishonestReduced(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "reputationDishonestReduced")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// ReputationDishonestReduced is a free data retrieval call binding the contract method 0x89be6f46.
//
// Solidity: function reputationDishonestReduced() view returns(uint256)
func (_WitnessPool *WitnessPoolSession) ReputationDishonestReduced() (*big.Int, error) {
	return _WitnessPool.Contract.ReputationDishonestReduced(&_WitnessPool.CallOpts)
}

// ReputationDishonestReduced is a free data retrieval call binding the contract method 0x89be6f46.
//
// Solidity: function reputationDishonestReduced() view returns(uint256)
func (_WitnessPool *WitnessPoolCallerSession) ReputationDishonestReduced() (*big.Int, error) {
	return _WitnessPool.Contract.ReputationDishonestReduced(&_WitnessPool.CallOpts)
}

// RewardNoviolationSilence is a free data retrieval call binding the contract method 0x744c2e33.
//
// Solidity: function rewardNoviolationSilence() view returns(uint256)
func (_WitnessPool *WitnessPoolCaller) RewardNoviolationSilence(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "rewardNoviolationSilence")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RewardNoviolationSilence is a free data retrieval call binding the contract method 0x744c2e33.
//
// Solidity: function rewardNoviolationSilence() view returns(uint256)
func (_WitnessPool *WitnessPoolSession) RewardNoviolationSilence() (*big.Int, error) {
	return _WitnessPool.Contract.RewardNoviolationSilence(&_WitnessPool.CallOpts)
}

// RewardNoviolationSilence is a free data retrieval call binding the contract method 0x744c2e33.
//
// Solidity: function rewardNoviolationSilence() view returns(uint256)
func (_WitnessPool *WitnessPoolCallerSession) RewardNoviolationSilence() (*big.Int, error) {
	return _WitnessPool.Contract.RewardNoviolationSilence(&_WitnessPool.CallOpts)
}

// RewardViolationReport is a free data retrieval call binding the contract method 0xf11ad7f0.
//
// Solidity: function rewardViolationReport() view returns(uint256)
func (_WitnessPool *WitnessPoolCaller) RewardViolationReport(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "rewardViolationReport")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// RewardViolationReport is a free data retrieval call binding the contract method 0xf11ad7f0.
//
// Solidity: function rewardViolationReport() view returns(uint256)
func (_WitnessPool *WitnessPoolSession) RewardViolationReport() (*big.Int, error) {
	return _WitnessPool.Contract.RewardViolationReport(&_WitnessPool.CallOpts)
}

// RewardViolationReport is a free data retrieval call binding the contract method 0xf11ad7f0.
//
// Solidity: function rewardViolationReport() view returns(uint256)
func (_WitnessPool *WitnessPoolCallerSession) RewardViolationReport() (*big.Int, error) {
	return _WitnessPool.Contract.RewardViolationReport(&_WitnessPool.CallOpts)
}

// StdNumReportRequired is a free data retrieval call binding the contract method 0x746ea9c6.
//
// Solidity: function stdNumReportRequired() view returns(uint256)
func (_WitnessPool *WitnessPoolCaller) StdNumReportRequired(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "stdNumReportRequired")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// StdNumReportRequired is a free data retrieval call binding the contract method 0x746ea9c6.
//
// Solidity: function stdNumReportRequired() view returns(uint256)
func (_WitnessPool *WitnessPoolSession) StdNumReportRequired() (*big.Int, error) {
	return _WitnessPool.Contract.StdNumReportRequired(&_WitnessPool.CallOpts)
}

// StdNumReportRequired is a free data retrieval call binding the contract method 0x746ea9c6.
//
// Solidity: function stdNumReportRequired() view returns(uint256)
func (_WitnessPool *WitnessPoolCallerSession) StdNumReportRequired() (*big.Int, error) {
	return _WitnessPool.Contract.StdNumReportRequired(&_WitnessPool.CallOpts)
}

// StdNumWitness is a free data retrieval call binding the contract method 0x3f5307c4.
//
// Solidity: function stdNumWitness() view returns(uint256)
func (_WitnessPool *WitnessPoolCaller) StdNumWitness(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "stdNumWitness")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// StdNumWitness is a free data retrieval call binding the contract method 0x3f5307c4.
//
// Solidity: function stdNumWitness() view returns(uint256)
func (_WitnessPool *WitnessPoolSession) StdNumWitness() (*big.Int, error) {
	return _WitnessPool.Contract.StdNumWitness(&_WitnessPool.CallOpts)
}

// StdNumWitness is a free data retrieval call binding the contract method 0x3f5307c4.
//
// Solidity: function stdNumWitness() view returns(uint256)
func (_WitnessPool *WitnessPoolCallerSession) StdNumWitness() (*big.Int, error) {
	return _WitnessPool.Contract.StdNumWitness(&_WitnessPool.CallOpts)
}

// StdWitnessDepoist is a free data retrieval call binding the contract method 0xa35da30c.
//
// Solidity: function stdWitnessDepoist() view returns(uint256)
func (_WitnessPool *WitnessPoolCaller) StdWitnessDepoist(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "stdWitnessDepoist")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// StdWitnessDepoist is a free data retrieval call binding the contract method 0xa35da30c.
//
// Solidity: function stdWitnessDepoist() view returns(uint256)
func (_WitnessPool *WitnessPoolSession) StdWitnessDepoist() (*big.Int, error) {
	return _WitnessPool.Contract.StdWitnessDepoist(&_WitnessPool.CallOpts)
}

// StdWitnessDepoist is a free data retrieval call binding the contract method 0xa35da30c.
//
// Solidity: function stdWitnessDepoist() view returns(uint256)
func (_WitnessPool *WitnessPoolCallerSession) StdWitnessDepoist() (*big.Int, error) {
	return _WitnessPool.Contract.StdWitnessDepoist(&_WitnessPool.CallOpts)
}

// StdblockNeed is a free data retrieval call binding the contract method 0xe0a5a2aa.
//
// Solidity: function stdblockNeed() view returns(uint256)
func (_WitnessPool *WitnessPoolCaller) StdblockNeed(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "stdblockNeed")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// StdblockNeed is a free data retrieval call binding the contract method 0xe0a5a2aa.
//
// Solidity: function stdblockNeed() view returns(uint256)
func (_WitnessPool *WitnessPoolSession) StdblockNeed() (*big.Int, error) {
	return _WitnessPool.Contract.StdblockNeed(&_WitnessPool.CallOpts)
}

// StdblockNeed is a free data retrieval call binding the contract method 0xe0a5a2aa.
//
// Solidity: function stdblockNeed() view returns(uint256)
func (_WitnessPool *WitnessPoolCallerSession) StdblockNeed() (*big.Int, error) {
	return _WitnessPool.Contract.StdblockNeed(&_WitnessPool.CallOpts)
}

// TokenContract is a free data retrieval call binding the contract method 0x55a373d6.
//
// Solidity: function tokenContract() view returns(address)
func (_WitnessPool *WitnessPoolCaller) TokenContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "tokenContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TokenContract is a free data retrieval call binding the contract method 0x55a373d6.
//
// Solidity: function tokenContract() view returns(address)
func (_WitnessPool *WitnessPoolSession) TokenContract() (common.Address, error) {
	return _WitnessPool.Contract.TokenContract(&_WitnessPool.CallOpts)
}

// TokenContract is a free data retrieval call binding the contract method 0x55a373d6.
//
// Solidity: function tokenContract() view returns(address)
func (_WitnessPool *WitnessPoolCallerSession) TokenContract() (common.Address, error) {
	return _WitnessPool.Contract.TokenContract(&_WitnessPool.CallOpts)
}

// WitnessReputationInit is a free data retrieval call binding the contract method 0x16c3734d.
//
// Solidity: function witnessReputationInit() view returns(uint256)
func (_WitnessPool *WitnessPoolCaller) WitnessReputationInit(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "witnessReputationInit")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// WitnessReputationInit is a free data retrieval call binding the contract method 0x16c3734d.
//
// Solidity: function witnessReputationInit() view returns(uint256)
func (_WitnessPool *WitnessPoolSession) WitnessReputationInit() (*big.Int, error) {
	return _WitnessPool.Contract.WitnessReputationInit(&_WitnessPool.CallOpts)
}

// WitnessReputationInit is a free data retrieval call binding the contract method 0x16c3734d.
//
// Solidity: function witnessReputationInit() view returns(uint256)
func (_WitnessPool *WitnessPoolCallerSession) WitnessReputationInit() (*big.Int, error) {
	return _WitnessPool.Contract.WitnessReputationInit(&_WitnessPool.CallOpts)
}

// WitnessReputationQualified is a free data retrieval call binding the contract method 0x89640b58.
//
// Solidity: function witnessReputationQualified() view returns(uint256)
func (_WitnessPool *WitnessPoolCaller) WitnessReputationQualified(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _WitnessPool.contract.Call(opts, &out, "witnessReputationQualified")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// WitnessReputationQualified is a free data retrieval call binding the contract method 0x89640b58.
//
// Solidity: function witnessReputationQualified() view returns(uint256)
func (_WitnessPool *WitnessPoolSession) WitnessReputationQualified() (*big.Int, error) {
	return _WitnessPool.Contract.WitnessReputationQualified(&_WitnessPool.CallOpts)
}

// WitnessReputationQualified is a free data retrieval call binding the contract method 0x89640b58.
//
// Solidity: function witnessReputationQualified() view returns(uint256)
func (_WitnessPool *WitnessPoolCallerSession) WitnessReputationQualified() (*big.Int, error) {
	return _WitnessPool.Contract.WitnessReputationQualified(&_WitnessPool.CallOpts)
}

// IsViolatedSLA is a paid mutator transaction binding the contract method 0xe81bc992.
//
// Solidity: function isViolatedSLA(uint256 _slaID) returns(bool)
func (_WitnessPool *WitnessPoolTransactor) IsViolatedSLA(opts *bind.TransactOpts, _slaID *big.Int) (*types.Transaction, error) {
	return _WitnessPool.contract.Transact(opts, "isViolatedSLA", _slaID)
}

// IsViolatedSLA is a paid mutator transaction binding the contract method 0xe81bc992.
//
// Solidity: function isViolatedSLA(uint256 _slaID) returns(bool)
func (_WitnessPool *WitnessPoolSession) IsViolatedSLA(_slaID *big.Int) (*types.Transaction, error) {
	return _WitnessPool.Contract.IsViolatedSLA(&_WitnessPool.TransactOpts, _slaID)
}

// IsViolatedSLA is a paid mutator transaction binding the contract method 0xe81bc992.
//
// Solidity: function isViolatedSLA(uint256 _slaID) returns(bool)
func (_WitnessPool *WitnessPoolTransactorSession) IsViolatedSLA(_slaID *big.Int) (*types.Transaction, error) {
	return _WitnessPool.Contract.IsViolatedSLA(&_WitnessPool.TransactOpts, _slaID)
}

// NewSLA is a paid mutator transaction binding the contract method 0xb65f6706.
//
// Solidity: function newSLA(uint256 _curBlockNum, address _provider, address _customer, uint256 _slaID, string _funcToMonitor, uint256 _monitoringDuration) returns()
func (_WitnessPool *WitnessPoolTransactor) NewSLA(opts *bind.TransactOpts, _curBlockNum *big.Int, _provider common.Address, _customer common.Address, _slaID *big.Int, _funcToMonitor string, _monitoringDuration *big.Int) (*types.Transaction, error) {
	return _WitnessPool.contract.Transact(opts, "newSLA", _curBlockNum, _provider, _customer, _slaID, _funcToMonitor, _monitoringDuration)
}

// NewSLA is a paid mutator transaction binding the contract method 0xb65f6706.
//
// Solidity: function newSLA(uint256 _curBlockNum, address _provider, address _customer, uint256 _slaID, string _funcToMonitor, uint256 _monitoringDuration) returns()
func (_WitnessPool *WitnessPoolSession) NewSLA(_curBlockNum *big.Int, _provider common.Address, _customer common.Address, _slaID *big.Int, _funcToMonitor string, _monitoringDuration *big.Int) (*types.Transaction, error) {
	return _WitnessPool.Contract.NewSLA(&_WitnessPool.TransactOpts, _curBlockNum, _provider, _customer, _slaID, _funcToMonitor, _monitoringDuration)
}

// NewSLA is a paid mutator transaction binding the contract method 0xb65f6706.
//
// Solidity: function newSLA(uint256 _curBlockNum, address _provider, address _customer, uint256 _slaID, string _funcToMonitor, uint256 _monitoringDuration) returns()
func (_WitnessPool *WitnessPoolTransactorSession) NewSLA(_curBlockNum *big.Int, _provider common.Address, _customer common.Address, _slaID *big.Int, _funcToMonitor string, _monitoringDuration *big.Int) (*types.Transaction, error) {
	return _WitnessPool.Contract.NewSLA(&_WitnessPool.TransactOpts, _curBlockNum, _provider, _customer, _slaID, _funcToMonitor, _monitoringDuration)
}

// ReportViolation is a paid mutator transaction binding the contract method 0xfc634e8f.
//
// Solidity: function reportViolation(uint256 _slaID) returns()
func (_WitnessPool *WitnessPoolTransactor) ReportViolation(opts *bind.TransactOpts, _slaID *big.Int) (*types.Transaction, error) {
	return _WitnessPool.contract.Transact(opts, "reportViolation", _slaID)
}

// ReportViolation is a paid mutator transaction binding the contract method 0xfc634e8f.
//
// Solidity: function reportViolation(uint256 _slaID) returns()
func (_WitnessPool *WitnessPoolSession) ReportViolation(_slaID *big.Int) (*types.Transaction, error) {
	return _WitnessPool.Contract.ReportViolation(&_WitnessPool.TransactOpts, _slaID)
}

// ReportViolation is a paid mutator transaction binding the contract method 0xfc634e8f.
//
// Solidity: function reportViolation(uint256 _slaID) returns()
func (_WitnessPool *WitnessPoolTransactorSession) ReportViolation(_slaID *big.Int) (*types.Transaction, error) {
	return _WitnessPool.Contract.ReportViolation(&_WitnessPool.TransactOpts, _slaID)
}

// WintessTurnOn is a paid mutator transaction binding the contract method 0xebe47110.
//
// Solidity: function wintessTurnOn() returns()
func (_WitnessPool *WitnessPoolTransactor) WintessTurnOn(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WitnessPool.contract.Transact(opts, "wintessTurnOn")
}

// WintessTurnOn is a paid mutator transaction binding the contract method 0xebe47110.
//
// Solidity: function wintessTurnOn() returns()
func (_WitnessPool *WitnessPoolSession) WintessTurnOn() (*types.Transaction, error) {
	return _WitnessPool.Contract.WintessTurnOn(&_WitnessPool.TransactOpts)
}

// WintessTurnOn is a paid mutator transaction binding the contract method 0xebe47110.
//
// Solidity: function wintessTurnOn() returns()
func (_WitnessPool *WitnessPoolTransactorSession) WintessTurnOn() (*types.Transaction, error) {
	return _WitnessPool.Contract.WintessTurnOn(&_WitnessPool.TransactOpts)
}

// WitenessLogout is a paid mutator transaction binding the contract method 0x426f93b1.
//
// Solidity: function witenessLogout() returns()
func (_WitnessPool *WitnessPoolTransactor) WitenessLogout(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WitnessPool.contract.Transact(opts, "witenessLogout")
}

// WitenessLogout is a paid mutator transaction binding the contract method 0x426f93b1.
//
// Solidity: function witenessLogout() returns()
func (_WitnessPool *WitnessPoolSession) WitenessLogout() (*types.Transaction, error) {
	return _WitnessPool.Contract.WitenessLogout(&_WitnessPool.TransactOpts)
}

// WitenessLogout is a paid mutator transaction binding the contract method 0x426f93b1.
//
// Solidity: function witenessLogout() returns()
func (_WitnessPool *WitnessPoolTransactorSession) WitenessLogout() (*types.Transaction, error) {
	return _WitnessPool.Contract.WitenessLogout(&_WitnessPool.TransactOpts)
}

// WitnessDrawReward is a paid mutator transaction binding the contract method 0x2fba9d1a.
//
// Solidity: function witnessDrawReward() returns()
func (_WitnessPool *WitnessPoolTransactor) WitnessDrawReward(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WitnessPool.contract.Transact(opts, "witnessDrawReward")
}

// WitnessDrawReward is a paid mutator transaction binding the contract method 0x2fba9d1a.
//
// Solidity: function witnessDrawReward() returns()
func (_WitnessPool *WitnessPoolSession) WitnessDrawReward() (*types.Transaction, error) {
	return _WitnessPool.Contract.WitnessDrawReward(&_WitnessPool.TransactOpts)
}

// WitnessDrawReward is a paid mutator transaction binding the contract method 0x2fba9d1a.
//
// Solidity: function witnessDrawReward() returns()
func (_WitnessPool *WitnessPoolTransactorSession) WitnessDrawReward() (*types.Transaction, error) {
	return _WitnessPool.Contract.WitnessDrawReward(&_WitnessPool.TransactOpts)
}

// WitnessLogin is a paid mutator transaction binding the contract method 0x9faa79e3.
//
// Solidity: function witnessLogin() returns()
func (_WitnessPool *WitnessPoolTransactor) WitnessLogin(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WitnessPool.contract.Transact(opts, "witnessLogin")
}

// WitnessLogin is a paid mutator transaction binding the contract method 0x9faa79e3.
//
// Solidity: function witnessLogin() returns()
func (_WitnessPool *WitnessPoolSession) WitnessLogin() (*types.Transaction, error) {
	return _WitnessPool.Contract.WitnessLogin(&_WitnessPool.TransactOpts)
}

// WitnessLogin is a paid mutator transaction binding the contract method 0x9faa79e3.
//
// Solidity: function witnessLogin() returns()
func (_WitnessPool *WitnessPoolTransactorSession) WitnessLogin() (*types.Transaction, error) {
	return _WitnessPool.Contract.WitnessLogin(&_WitnessPool.TransactOpts)
}

// WitnessTurnOff is a paid mutator transaction binding the contract method 0xecc7e64b.
//
// Solidity: function witnessTurnOff() returns()
func (_WitnessPool *WitnessPoolTransactor) WitnessTurnOff(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _WitnessPool.contract.Transact(opts, "witnessTurnOff")
}

// WitnessTurnOff is a paid mutator transaction binding the contract method 0xecc7e64b.
//
// Solidity: function witnessTurnOff() returns()
func (_WitnessPool *WitnessPoolSession) WitnessTurnOff() (*types.Transaction, error) {
	return _WitnessPool.Contract.WitnessTurnOff(&_WitnessPool.TransactOpts)
}

// WitnessTurnOff is a paid mutator transaction binding the contract method 0xecc7e64b.
//
// Solidity: function witnessTurnOff() returns()
func (_WitnessPool *WitnessPoolTransactorSession) WitnessTurnOff() (*types.Transaction, error) {
	return _WitnessPool.Contract.WitnessTurnOff(&_WitnessPool.TransactOpts)
}

// WitnessPoolWitnessSelectedEventIterator is returned from FilterWitnessSelectedEvent and is used to iterate over the raw logs and unpacked data for WitnessSelectedEvent events raised by the WitnessPool contract.
type WitnessPoolWitnessSelectedEventIterator struct {
	Event *WitnessPoolWitnessSelectedEvent // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *WitnessPoolWitnessSelectedEventIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(WitnessPoolWitnessSelectedEvent)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(WitnessPoolWitnessSelectedEvent)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *WitnessPoolWitnessSelectedEventIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *WitnessPoolWitnessSelectedEventIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// WitnessPoolWitnessSelectedEvent represents a WitnessSelectedEvent event raised by the WitnessPool contract.
type WitnessPoolWitnessSelectedEvent struct {
	Witness             common.Address
	SlaID               *big.Int
	MonitoringBeginTime *big.Int
	MonitoringDuration  *big.Int
	FuncToMonitor       string
	Raw                 types.Log // Blockchain specific contextual infos
}

// FilterWitnessSelectedEvent is a free log retrieval operation binding the contract event 0xb75dc87e2f9d1c0a563b98a1148d3f71d4137a45be4148a6a35a0b045a3c9101.
//
// Solidity: event WitnessSelectedEvent(address indexed _witness, uint256 _slaID, uint256 _monitoringBeginTime, uint256 _monitoringDuration, string _funcToMonitor)
func (_WitnessPool *WitnessPoolFilterer) FilterWitnessSelectedEvent(opts *bind.FilterOpts, _witness []common.Address) (*WitnessPoolWitnessSelectedEventIterator, error) {

	var _witnessRule []interface{}
	for _, _witnessItem := range _witness {
		_witnessRule = append(_witnessRule, _witnessItem)
	}

	logs, sub, err := _WitnessPool.contract.FilterLogs(opts, "WitnessSelectedEvent", _witnessRule)
	if err != nil {
		return nil, err
	}
	return &WitnessPoolWitnessSelectedEventIterator{contract: _WitnessPool.contract, event: "WitnessSelectedEvent", logs: logs, sub: sub}, nil
}

// WatchWitnessSelectedEvent is a free log subscription operation binding the contract event 0xb75dc87e2f9d1c0a563b98a1148d3f71d4137a45be4148a6a35a0b045a3c9101.
//
// Solidity: event WitnessSelectedEvent(address indexed _witness, uint256 _slaID, uint256 _monitoringBeginTime, uint256 _monitoringDuration, string _funcToMonitor)
func (_WitnessPool *WitnessPoolFilterer) WatchWitnessSelectedEvent(opts *bind.WatchOpts, sink chan<- *WitnessPoolWitnessSelectedEvent, _witness []common.Address) (event.Subscription, error) {

	var _witnessRule []interface{}
	for _, _witnessItem := range _witness {
		_witnessRule = append(_witnessRule, _witnessItem)
	}

	logs, sub, err := _WitnessPool.contract.WatchLogs(opts, "WitnessSelectedEvent", _witnessRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(WitnessPoolWitnessSelectedEvent)
				if err := _WitnessPool.contract.UnpackLog(event, "WitnessSelectedEvent", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWitnessSelectedEvent is a log parse operation binding the contract event 0xb75dc87e2f9d1c0a563b98a1148d3f71d4137a45be4148a6a35a0b045a3c9101.
//
// Solidity: event WitnessSelectedEvent(address indexed _witness, uint256 _slaID, uint256 _monitoringBeginTime, uint256 _monitoringDuration, string _funcToMonitor)
func (_WitnessPool *WitnessPoolFilterer) ParseWitnessSelectedEvent(log types.Log) (*WitnessPoolWitnessSelectedEvent, error) {
	event := new(WitnessPoolWitnessSelectedEvent)
	if err := _WitnessPool.contract.UnpackLog(event, "WitnessSelectedEvent", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
